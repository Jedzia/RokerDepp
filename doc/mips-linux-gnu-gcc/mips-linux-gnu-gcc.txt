The following options are language-independent:
  --debug                     This switch lacks documentation
  --dump                      This switch lacks documentation
  --dump=                     This switch lacks documentation
  --dumpbase                  This switch lacks documentation
  --dumpdir                   This switch lacks documentation
  --extra-warnings            This switch lacks documentation
  --help                      Display this information
  --help=<class>              Display descriptions of a specific class of
                              options.  <class> is one or more of optimizers,
                              target, warnings, undocumented, params
  --no-warnings               This switch lacks documentation
  --optimize                  This switch lacks documentation
  --output                    This switch lacks documentation
  --output=                   This switch lacks documentation
  --param <param>=<value>     Set parameter <param> to value.  See below for a
                              complete list of parameters
  --param=                    This switch lacks documentation
  --pedantic                  This switch lacks documentation
  --pedantic-errors           This switch lacks documentation
  --profile                   This switch lacks documentation
  --target-help               Alias for --help=target
  --verbose                   This switch lacks documentation
  --version                   This switch lacks documentation
  -O<number>                  Set optimization level to <number>
  -Ofast                      Optimize for speed disregarding exact standards
                              compliance
  -Og                         Optimize for debugging experience rather than
                              speed or size
  -Os                         Optimize for space rather than speed
  -W                          This switch is deprecated; use -Wextra instead
  -Waggregate-return          Warn about returning structures, unions or arrays
  -Waggressive-loop-optimizations Warn if a loop with constant number of
                              iterations triggers undefined behavior
  -Warray-bounds              Warn if an array is accessed out of bounds
  -Warray-bounds=             Warn if an array is accessed out of bounds
  -Wattributes                Warn about inappropriate attribute usage
  -Wcast-align                Warn about pointer casts which increase alignment
  -Wcoverage-mismatch         Warn in case profiles in -fprofile-use do not
                              match
  -Wcpp                       Warn when a #warning directive is encountered
  -Wdeprecated-declarations   Warn about uses of __attribute__((deprecated))
                              declarations
  -Wdisabled-optimization     Warn when an optimization pass is disabled
  -Werror                     Treat all warnings as errors
  -Werror=                    Treat specified warning as error
  -Wextra                     Print extra (possibly unwanted) warnings
  -Wfatal-errors              Exit on the first error occurred
  -Wframe-larger-than=<number> Warn if a function's stack frame requires more
                              than <number> bytes
  -Wfree-nonheap-object       Warn when attempting to free a non-heap object
  -Winline                    Warn when an inlined function cannot be inlined
  -Winvalid-memory-model      Warn when an atomic memory model parameter is
                              known to be outside the valid range.
  -Wlarger-than-              This switch lacks documentation
  -Wlarger-than=<number>      Warn if an object is larger than <number> bytes
  -Wmaybe-uninitialized       Warn about maybe uninitialized automatic variables
  -Wmissing-noreturn          This switch lacks documentation
  -Wodr                       Warn about some C++ One Definition Rule
                              violations during link time optimization
  -Woverflow                  Warn about overflow in arithmetic expressions
  -Wpacked                    Warn when the packed attribute has no effect on
                              struct layout
  -Wpadded                    Warn when padding is required to align structure
                              members
  -Wpedantic                  Issue warnings needed for strict compliance to
                              the standard
  -Wpoison-system-directories Warn for -I and -L options using system
                              directories if cross compiling
  -Wreturn-local-addr         Warn about returning a pointer/reference to a
                              local or temporary variable.
  -Wshadow                    Warn when one local variable shadows another
  -Wstack-protector           Warn when not issuing stack smashing protection
                              for some reason
  -Wstack-usage=              Warn if stack usage might be larger than
                              specified amount
  -Wstrict-aliasing           Warn about code which might break strict aliasing
                              rules
  -Wstrict-aliasing=          Warn about code which might break strict aliasing
                              rules
  -Wstrict-overflow           Warn about optimizations that assume that signed
                              overflow is undefined
  -Wstrict-overflow=          Warn about optimizations that assume that signed
                              overflow is undefined
  -Wsuggest-attribute=const   Warn about functions which might be candidates
                              for __attribute__((const))
  -Wsuggest-attribute=noreturn Warn about functions which might be candidates
                              for __attribute__((noreturn))
  -Wsuggest-attribute=pure    Warn about functions which might be candidates
                              for __attribute__((pure))
  -Wsuggest-final-methods     Warn about C++ virtual methods where adding final
                              keyword would improve code quality
  -Wsuggest-final-types       Warn about C++ polymorphic types where adding
                              final keyword would improve code quality
  -Wsystem-headers            Do not suppress warnings from system headers
  -Wtrampolines               Warn whenever a trampoline is generated
  -Wtype-limits               Warn if a comparison is always true or always
                              false due to the limited range of the data type
  -Wuninitialized             Warn about uninitialized automatic variables
  -Wunreachable-code          Does nothing. Preserved for backward
                              compatibility.
  -Wunsafe-loop-optimizations Warn if the loop cannot be optimized due to
                              nontrivial assumptions.
  -Wunused                    Enable all -Wunused- warnings
  -Wunused-but-set-parameter  Warn when a function parameter is only set,
                              otherwise unused
  -Wunused-but-set-variable   Warn when a variable is only set, otherwise unused
  -Wunused-function           Warn when a function is unused
  -Wunused-label              Warn when a label is unused
  -Wunused-parameter          Warn when a function parameter is unused
  -Wunused-value              Warn when an expression value is unused
  -Wunused-variable           Warn when a variable is unused
  -Wvector-operation-performance Warn when a vector operation is compiled
                              outside the SIMD
  -aux-info <file>            Emit declaration information into <file>
  -aux-info=                  This switch lacks documentation
  -auxbase                    This switch lacks documentation
  -auxbase-strip              This switch lacks documentation
  -d<letters>                 Enable dumps from specific passes of the compiler
  -dumpbase <file>            Set the file basename to be used for dumps
  -dumpdir <dir>              Set the directory name to be used for dumps
  -fPIC                       Generate position-independent code if possible
                              (large mode)
  -fPIE                       Generate position-independent code for
                              executables if possible (large mode)
  -fabi-version=              The version of the C++ ABI in use
  -faggressive-loop-optimizations Aggressively optimize loops using language
                              constraints
  -falign-functions           Align the start of functions
  -falign-functions=          This switch lacks documentation
  -falign-jumps               Align labels which are only reached by jumping
  -falign-jumps=              This switch lacks documentation
  -falign-labels              Align all labels
  -falign-labels=             This switch lacks documentation
  -falign-loops               Align the start of loops
  -falign-loops=              This switch lacks documentation
  -fargument-alias            Does nothing. Preserved for backward
                              compatibility.
  -fargument-noalias          Does nothing. Preserved for backward
                              compatibility.
  -fargument-noalias-anything Does nothing. Preserved for backward
                              compatibility.
  -fargument-noalias-global   Does nothing. Preserved for backward
                              compatibility.
  -fasan-shadow-offset=<number> Use custom shadow memory offset.
  -fassociative-math          Allow optimization for floating-point arithmetic
                              which may change the result of the operation due
                              to rounding.
  -fasynchronous-unwind-tables Generate unwind tables that are exact at each
                              instruction boundary
  -fauto-inc-dec              Generate auto-inc/dec instructions
  -fauto-profile              Use sample profile information for call graph
                              node weights. The default profile file is
                              fbdata.afdo in 'pwd'.
  -fauto-profile=             Use sample profile information for call graph
                              node weights. The profile file is specified in
                              the argument.
  -fbounds-check              Generate code to check bounds before indexing
                              arrays
  -fbranch-count-reg          Replace add, compare, branch with branch on count
                              register
  -fbranch-probabilities      Use profiling information for branch probabilities
  -fbranch-target-load-optimize Perform branch target load optimization before
                              prologue / epilogue threading
  -fbranch-target-load-optimize2 Perform branch target load optimization after
                              prologue / epilogue threading
  -fbtr-bb-exclusive          Restrict target load migration not to re-use
                              registers in any basic block
  -fcall-saved-<register>     Mark <register> as being preserved across
                              functions
  -fcall-used-<register>      Mark <register> as being corrupted by function
                              calls
  -fcaller-saves              Save registers around function calls
  -fcheck-data-deps           Compare the results of several data dependence
                              analyzers.
  -fcheck-new                 Check the return value of new in C++
  -fcombine-stack-adjustments Looks for opportunities to reduce stack
                              adjustments and stack references.
  -fcommon                    Do not put uninitialized globals in the common
                              section
  -fcompare-debug-second      Run only the second compilation of -fcompare-debug
  -fcompare-debug[=<opts>]    Compile with and without e.g. -gtoggle, and
                              compare the final-insns dump
  -fcompare-elim              Perform comparison elimination after register
                              allocation has finished
  -fconserve-stack            Do not perform optimizations increasing
                              noticeably stack usage
  -fcprop-registers           Perform a register copy-propagation optimization
                              pass
  -fcrossjumping              Perform cross-jumping optimization
  -fcse-follow-jumps          When running CSE, follow jumps to their targets
  -fcse-skip-blocks           Does nothing.  Preserved for backward
                              compatibility.
  -fcx-fortran-rules          Complex multiplication and division follow
                              Fortran rules
  -fcx-limited-range          Omit range reduction step when performing complex
                              division
  -fdata-sections             Place data items into their own section
  -fdbg-cnt-list              List all available debugging counters with their
                              limits and counts.
  -fdbg-cnt=<counter>:<limit>[,<counter>:<limit>,...] Set the debug counter
                              limit.   
  -fdce                       Use the RTL dead code elimination pass
  -fdebug-prefix-map=         Map one directory name to another in debug
                              information
  -fdebug-types-section       Output .debug_types section when using DWARF v4
                              debuginfo.
  -fdefer-pop                 Defer popping functions args from stack until
                              later
  -fdelayed-branch            Attempt to fill delay slots of branch instructions
  -fdelete-dead-exceptions    Delete dead instructions that may throw exceptions
  -fdelete-null-pointer-checks Delete useless null pointer checks
  -fdevirtualize              Try to convert virtual calls to direct ones.
  -fdevirtualize-at-ltrans    Stream extra data to support more aggressive
                              devirtualization in LTO local transformation mode
  -fdevirtualize-speculatively Perform speculative devirtualization
  -fdiagnostics-color         This switch lacks documentation
  -fdiagnostics-color=[never|always|auto] Colorize diagnostics
  -fdiagnostics-show-caret    Show the source line with a caret indicating the
                              column
  -fdiagnostics-show-location=[once|every-line] How often to emit source
                              location at the beginning of line-wrapped
                              diagnostics
  -fdiagnostics-show-option   Amend appropriate diagnostic messages with the
                              command line option that controls them
  -fdisable-                  -fdisable-[tree|rtl|ipa]-<pass>=range1+range2
                              disables an optimization pass
  -fdse                       Use the RTL dead store elimination pass
  -fdump-<type>               Dump various compiler internals to a file
  -fdump-final-insns=filename Dump to filename the insns at the end of
                              translation
  -fdump-go-spec=filename     Write all declarations to file as Go code
  -fdump-noaddr               Suppress output of addresses in debugging dumps
  -fdump-passes               Dump optimization passes
  -fdump-unnumbered           Suppress output of instruction numbers, line
                              number notes and addresses in debugging dumps
  -fdump-unnumbered-links     Suppress output of previous and next insn numbers
                              in debugging dumps
  -fdwarf2-cfi-asm            Enable CFI tables via GAS assembler directives.
  -fearly-inlining            Perform early inlining
  -feliminate-dwarf2-dups     Perform DWARF2 duplicate elimination
  -feliminate-unused-debug-symbols Perform unused symbol elimination in debug
                              info
  -feliminate-unused-debug-types Perform unused type elimination in debug info
  -femit-class-debug-always   Do not suppress C++ class debug information.
  -fenable-                   -fenable-[tree|rtl|ipa]-<pass>=range1+range2
                              enables an optimization pass
  -fexceptions                Enable exception handling
  -fexcess-precision=[fast|standard] Specify handling of excess floating-point
                              precision
  -fexpensive-optimizations   Perform a number of minor, expensive optimizations
  -ffast-math                 This switch lacks documentation
  -ffat-lto-objects           Output lto objects containing both the
                              intermediate language and binary output.
  -ffinite-math-only          Assume no NaNs or infinities are generated
  -ffixed-<register>          Mark <register> as being unavailable to the
                              compiler
  -ffloat-store               Don't allocate floats and doubles in extended-
                              precision registers
  -fforce-addr                Does nothing.  Preserved for backward
                              compatibility.
  -fforward-propagate         Perform a forward propagation pass on RTL
  -ffp-contract=              -ffp-contract=[off|on|fast] Perform floating-
                              point expression contraction.
  -ffunction-cse              Allow function addresses to be held in registers
  -ffunction-sections         Place each function into its own section
  -fgcse                      Perform global common subexpression elimination
  -fgcse-after-reload         Perform global common subexpression elimination
                              after register allocation has finished
  -fgcse-las                  Perform redundant load after store elimination in
                              global common subexpression elimination
  -fgcse-lm                   Perform enhanced load motion during global common
                              subexpression elimination
  -fgcse-sm                   Perform store motion after global common
                              subexpression elimination
  -fgnu-tm                    Enable support for GNU transactional memory
  -fgnu-unique                Use STB_GNU_UNIQUE if supported by the assembler
  -fgraphite                  Enable in and out of Graphite representation
  -fgraphite-identity         Enable Graphite Identity transformation
  -fguess-branch-probability  Enable guessing of branch probabilities
  -fhelp                      This switch lacks documentation
  -fhelp=                     This switch lacks documentation
  -fhoist-adjacent-loads      Enable hoisting adjacent loads to encourage
                              generating conditional move instructions
  -fident                     Process #ident directives
  -fif-conversion             Perform conversion of conditional jumps to
                              branchless equivalents
  -fif-conversion2            Perform conversion of conditional jumps to
                              conditional execution
  -findirect-inlining         Perform indirect inlining
  -finhibit-size-directive    Do not generate .size directives
  -finline                    Enable inlining of function declared "inline",
                              disabling disables all inlining
  -finline-atomics            Inline __atomic operations when a lock free
                              instruction sequence is available.
  -finline-functions          Integrate functions not declared "inline" into
                              their callers when profitable
  -finline-functions-called-once Integrate functions only required by their
                              single caller
  -finline-limit-             This switch lacks documentation
  -finline-limit=<number>     Limit the size of inlined functions to <number>
  -finline-small-functions    Integrate functions into their callers when code
                              size is known not to grow
  -finstrument-functions      Instrument function entry and exit with profiling
                              calls
  -finstrument-functions-exclude-file-list= -finstrument-functions-exclude-file-
                              list=filename,...  Do not instrument functions
                              listed in files
  -finstrument-functions-exclude-function-list= -finstrument-functions-exclude-
                              function-list=name,...  Do not instrument listed
                              functions
  -fipa-cp                    Perform interprocedural constant propagation
  -fipa-cp-alignment          Perform alignment discovery and propagation to
                              make Interprocedural constant propagation stronger
  -fipa-cp-clone              Perform cloning to make Interprocedural constant
                              propagation stronger
  -fipa-icf                   Perform Identical Code Folding for functions and
                              read-only variables
  -fipa-icf-functions         Perform Identical Code Folding for functions
  -fipa-icf-variables         Perform Identical Code Folding for variables
  -fipa-matrix-reorg          Does nothing. Preserved for backward
                              compatibility.
  -fipa-profile               Perform interprocedural profile propagation
  -fipa-pta                   Perform interprocedural points-to analysis
  -fipa-pure-const            Discover pure and const functions
  -fipa-ra                    Use caller save register across calls if possible
  -fipa-reference             Discover readonly and non addressable static
                              variables
  -fipa-sra                   Perform interprocedural reduction of aggregates
  -fipa-struct-reorg          Does nothing. Preserved for backward
                              compatibility.
  -fira-algorithm=            -fira-algorithm=[CB|priority] Set the used IRA
                              algorithm
  -fira-hoist-pressure        Use IRA based register pressure calculation in
                              RTL hoist optimizations.
  -fira-loop-pressure         Use IRA based register pressure calculation in
                              RTL loop optimizations.
  -fira-region=               -fira-region=[one|all|mixed] Set regions for IRA
  -fira-share-save-slots      Share slots for saving different hard registers.
  -fira-share-spill-slots     Share stack slots for spilled pseudo-registers.
  -fira-verbose=<number>      Control IRA's level of diagnostic messages.
  -fisolate-erroneous-paths-attribute Detect paths that trigger erroneous or
                              undefined behavior due a null value being used in
                              a way forbidden by a returns_nonnull or nonnull
                              attribute.  Isolate those paths from the main
                              control flow and turn the statement with
                              erroneous or undefined behavior into a trap. 
  -fisolate-erroneous-paths-dereference Detect paths that trigger erroneous or
                              undefined behavior due to dereferencing a null
                              pointer.  Isolate those paths from the main
                              control flow and turn the statement with
                              erroneous or undefined behavior into a trap.
  -fivopts                    Optimize induction variables on trees
  -fjump-tables               Use jump tables for sufficiently large switch
                              statements
  -fkeep-inline-functions     Generate code for functions even if they are
                              fully inlined
  -fkeep-static-consts        Emit static const variables even if they are not
                              used
  -fleading-underscore        Give external symbols a leading underscore
  -flifetime-dse              Tell DSE that the storage for a C++ object is
                              dead when the constructor starts and when the
                              destructor finishes.
  -flive-range-shrinkage      Relief of register pressure through live range
                              shrinkage
  -floop-block                Enable Loop Blocking transformation
  -floop-flatten              Does nothing. Preserved for backward
                              compatibility.
  -floop-interchange          Enable Loop Interchange transformation
  -floop-nest-optimize        Enable the ISL based loop nest optimizer
  -floop-optimize             Does nothing.  Preserved for backward
                              compatibility.
  -floop-parallelize-all      Mark all loops as parallel
  -floop-strip-mine           Enable Loop Strip Mining transformation
  -floop-unroll-and-jam       Enable Loop Unroll Jam transformation
  -flra-remat                 Do CFG-sensitive rematerialization in LRA
  -flto                       Enable link-time optimization.
  -flto-compression-level=<number> Use zlib compression level <number> for IL
  -flto-odr-type-merging      Merge C++ types using One Definition Rule
  -flto-partition=            Specify the algorithm to partition symbols and
                              vars at linktime
  -flto-report                Report various link-time optimization statistics
  -flto-report-wpa            Report various link-time optimization statistics
                              for WPA only
  -flto=                      Link-time optimization with number of parallel
                              jobs or jobserver.
  -fmath-errno                Set errno after built-in math functions
  -fmax-errors=<number>       Maximum number of errors to report
  -fmem-report                Report on permanent memory allocation
  -fmem-report-wpa            Report on permanent memory allocation in WPA only
  -fmerge-all-constants       Attempt to merge identical constants and constant
                              variables
  -fmerge-constants           Attempt to merge identical constants across
                              compilation units
  -fmerge-debug-strings       Attempt to merge identical debug strings across
                              compilation units
  -fmessage-length=<number>   Limit diagnostics to <number> characters per
                              line.  0 suppresses line-wrapping
  -fmodulo-sched              Perform SMS based modulo scheduling before the
                              first scheduling pass
  -fmodulo-sched-allow-regmoves Perform SMS based modulo scheduling with
                              register moves allowed
  -fmove-loop-invariants      Move loop invariant computations out of loops
  -fno-vect-cost-model        Enables the unlimited vectorizer cost model. 
                              Preserved for backward compatibility.
  -fnon-call-exceptions       Support synchronous non-call exceptions
  -foffload-abi=              -foffload-abi=[lp64|ilp32]     Set the ABI to use
                              in an offload compiler
  -foffload=                  -foffload=<targets>=<options>  Specify offloading
                              targets and options for them
  -fomit-frame-pointer        When possible do not generate stack frames
  -fopt-info                  Enable all optimization info dumps on stderr
  -fopt-info[-<type>=filename] Dump compiler optimization details
  -foptimize-register-move    Does nothing. Preserved for backward
                              compatibility.
  -foptimize-sibling-calls    Optimize sibling and tail recursive calls
  -foptimize-strlen           Enable string length optimizations on trees
  -fpack-struct               Pack structure members together without holes
  -fpack-struct=<number>      Set initial maximum structure member alignment
  -fpartial-inlining          Perform partial inlining
  -fpcc-struct-return         Return small aggregates in memory, not registers
  -fpeel-loops                Perform loop peeling
  -fpeephole                  Enable machine specific peephole optimizations
  -fpeephole2                 Enable an RTL peephole pass before sched2
  -fpic                       Generate position-independent code if possible
                              (small mode)
  -fpie                       Generate position-independent code for
                              executables if possible (small mode)
  -fplugin-arg-<name>-<key>[=<value>] Specify argument <key>=<value> for plugin
                              <name>
  -fplugin=                   Specify a plugin to load
  -fpost-ipa-mem-report       Report on memory allocation before
                              interprocedural optimization
  -fpre-ipa-mem-report        Report on memory allocation before
                              interprocedural optimization
  -fpredictive-commoning      Run predictive commoning optimization.
  -fprefetch-loop-arrays      Generate prefetch instructions, if available, for
                              arrays in loops
  -fprofile                   Enable basic program profiling code
  -fprofile-arcs              Insert arc-based program profiling code
  -fprofile-correction        Enable correction of flow inconsistent profile
                              data input
  -fprofile-dir=              Set the top-level directory for storing the
                              profile data. The default is 'pwd'.
  -fprofile-generate          Enable common options for generating profile info
                              for profile feedback directed optimizations
  -fprofile-generate=         Enable common options for generating profile info
                              for profile feedback directed optimizations, and
                              set -fprofile-dir=
  -fprofile-reorder-functions Enable function reordering that improves code
                              placement
  -fprofile-report            Report on consistency of profile
  -fprofile-use               Enable common options for performing profile
                              feedback directed optimizations
  -fprofile-use=              Enable common options for performing profile
                              feedback directed optimizations, and set
                              -fprofile-dir=
  -fprofile-values            Insert code to profile values of expressions
  -frandom-seed               This switch lacks documentation
  -frandom-seed=<number>      Make compile reproducible using <number>
  -freciprocal-math           Same as -fassociative-math for expressions which
                              include division.
  -frecord-gcc-switches       Record gcc command line switches in the object
                              file.
  -free                       Turn on Redundant Extensions Elimination pass.
  -freg-struct-return         Return small aggregates in registers
  -fregmove                   Does nothing. Preserved for backward
                              compatibility.
  -frename-registers          Perform a register renaming optimization pass
  -freorder-blocks            Reorder basic blocks to improve code placement
  -freorder-blocks-and-partition Reorder basic blocks and partition into hot
                              and cold sections
  -freorder-functions         Reorder functions to improve code placement
  -freport-bug                Collect and dump debug information into temporary
                              file if ICE in C/C++ compiler occured.
  -frerun-cse-after-loop      Add a common subexpression elimination pass after
                              loop optimizations
  -frerun-loop-opt            Does nothing.  Preserved for backward
                              compatibility.
  -freschedule-modulo-scheduled-loops Enable/Disable the traditional scheduling
                              in loops that already passed modulo scheduling
  -frounding-math             Disable optimizations that assume default FP
                              rounding behavior
  -fsanitize-recover          This switch is deprecated; use -fsanitize-
                              recover= instead
  -fsanitize-recover=         After diagnosing undefined behavior attempt to
                              continue execution
  -fsanitize-undefined-trap-on-error Use trap instead of a library function for
                              undefined behavior sanitization
  -fsanitize=                 Select what to sanitize
  -fsched-critical-path-heuristic Enable the critical path heuristic in the
                              scheduler
  -fsched-dep-count-heuristic Enable the dependent count heuristic in the
                              scheduler
  -fsched-group-heuristic     Enable the group heuristic in the scheduler
  -fsched-interblock          Enable scheduling across basic blocks
  -fsched-last-insn-heuristic Enable the last instruction heuristic in the
                              scheduler
  -fsched-pressure            Enable register pressure sensitive insn scheduling
  -fsched-rank-heuristic      Enable the rank heuristic in the scheduler
  -fsched-spec                Allow speculative motion of non-loads
  -fsched-spec-insn-heuristic Enable the speculative instruction heuristic in
                              the scheduler
  -fsched-spec-load           Allow speculative motion of some loads
  -fsched-spec-load-dangerous Allow speculative motion of more loads
  -fsched-stalled-insns       Allow premature scheduling of queued insns
  -fsched-stalled-insns-dep   Set dependence distance checking in premature
                              scheduling of queued insns
  -fsched-stalled-insns-dep=<number> Set dependence distance checking in
                              premature scheduling of queued insns
  -fsched-stalled-insns=<number> Set number of queued insns that can be
                              prematurely scheduled
  -fsched-verbose=<number>    Set the verbosity level of the scheduler
  -fsched2-use-superblocks    If scheduling post reload, do superblock
                              scheduling
  -fsched2-use-traces         Does nothing.  Preserved for backward
                              compatibility.
  -fschedule-fusion           Perform a target dependent instruction fusion
                              optimization pass
  -fschedule-insns            Reschedule instructions before register allocation
  -fschedule-insns2           Reschedule instructions after register allocation
  -fsection-anchors           Access data in the same section from shared
                              anchor points
  -fsee                       Does nothing.  Preserved for backward
                              compatibility.
  -fsel-sched-pipelining      Perform software pipelining of inner loops during
                              selective scheduling
  -fsel-sched-pipelining-outer-loops Perform software pipelining of outer loops
                              during selective scheduling
  -fsel-sched-reschedule-pipelined Reschedule pipelined regions without
                              pipelining
  -fselective-scheduling      Schedule instructions using selective scheduling
                              algorithm
  -fselective-scheduling2     Run selective scheduling after reload
  -fsemantic-interposition    Allow interposing function (or variables) by ones
                              with different semantics (or initializer)
                              respectively by dynamic linker
  -fshow-column               Show column numbers in diagnostics, when
                              available.  Default on
  -fshrink-wrap               Emit function prologues only before parts of the
                              function that need it, rather than at the top of
                              the function.
  -fsignaling-nans            Disable optimizations observable by IEEE
                              signaling NaNs
  -fsigned-zeros              Disable floating point optimizations that ignore
                              the IEEE signedness of zero
  -fsimd-cost-model=          Specifies the vectorization cost model for code
                              marked with a simd directive
  -fsingle-precision-constant Convert floating point constants to single
                              precision constants
  -fsplit-ivs-in-unroller     Split lifetimes of induction variables when loops
                              are unrolled
  -fsplit-stack               Generate discontiguous stack frames
  -fsplit-wide-types          Split wide types into independent registers
  -fssa-phiopt                Optimize conditional patterns using SSA PHI nodes
  -fstack-check               Insert stack checking code into the program. 
                              Same as -fstack-check=specific
  -fstack-check=[no|generic|specific] Insert stack checking code into the
                              program
  -fstack-limit               This switch lacks documentation
  -fstack-limit-register=<register> Trap if the stack goes past <register>
  -fstack-limit-symbol=<name> Trap if the stack goes past symbol <name>
  -fstack-protector           Use propolice as a stack protection method
  -fstack-protector-all       Use a stack protection method for every function
  -fstack-protector-explicit  Use stack protection method only for functions
                              with the stack_protect attribute
  -fstack-protector-strong    Use a smart stack protection method for certain
                              functions
  -fstack-reuse=              -fstack-reuse=[all|named_vars|none] Set stack
                              reuse level for local variables.
  -fstack-usage               Output stack usage information on a per-function
                              basis
  -fstdarg-opt                Optimize amount of stdarg registers saved to
                              stack at start of function
  -fstrength-reduce           Does nothing.  Preserved for backward
                              compatibility.
  -fstrict-aliasing           Assume strict aliasing rules apply
  -fstrict-overflow           Treat signed overflow as undefined
  -fstrict-volatile-bitfields Force bitfield accesses to match their type width
  -fsync-libcalls             Implement __atomic operations via libcalls to
                              legacy __sync functions
  -fsyntax-only               Check for syntax errors, then stop
  -ftarget-help               This switch lacks documentation
  -ftest-coverage             Create data files needed by "gcov"
  -fthread-jumps              Perform jump threading optimizations
  -ftime-report               Report the time taken by each compiler pass
  -ftls-model=[global-dynamic|local-dynamic|initial-exec|local-exec] Set the
                              default thread-local storage code generation model
  -ftoplevel-reorder          Reorder top level functions, variables, and asms
  -ftracer                    Perform superblock formation via tail duplication
  -ftrapping-math             Assume floating-point operations can trap
  -ftrapv                     Trap for signed overflow in addition, subtraction
                              and multiplication
  -ftree-bit-ccp              Enable SSA-BIT-CCP optimization on trees
  -ftree-builtin-call-dce     Enable conditional dead code elimination for
                              builtin calls
  -ftree-ccp                  Enable SSA-CCP optimization on trees
  -ftree-ch                   Enable loop header copying on trees
  -ftree-coalesce-inlined-vars Enable coalescing of copy-related user variables
                              that are inlined
  -ftree-coalesce-vars        Enable coalescing of all copy-related user
                              variables
  -ftree-copy-prop            Enable copy propagation on trees
  -ftree-copyrename           Replace SSA temporaries with better names in
                              copies
  -ftree-cselim               Transform condition stores into unconditional ones
  -ftree-dce                  Enable SSA dead code elimination optimization on
                              trees
  -ftree-dominator-opts       Enable dominator optimizations
  -ftree-dse                  Enable dead store elimination
  -ftree-forwprop             Enable forward propagation on trees
  -ftree-fre                  Enable Full Redundancy Elimination (FRE) on trees
  -ftree-loop-distribute-patterns Enable loop distribution for patterns
                              transformed into a library call
  -ftree-loop-distribution    Enable loop distribution on trees
  -ftree-loop-if-convert      Convert conditional jumps in innermost loops to
                              branchless equivalents
  -ftree-loop-if-convert-stores Also if-convert conditional jumps containing
                              memory writes
  -ftree-loop-im              Enable loop invariant motion on trees
  -ftree-loop-ivcanon         Create canonical induction variables in loops
  -ftree-loop-linear          Enable loop interchange transforms.  Same as
                              -floop-interchange
  -ftree-loop-optimize        Enable loop optimizations on tree level
  -ftree-loop-vectorize       Enable loop vectorization on trees
  -ftree-lrs                  Perform live range splitting during the SSA-
                              >normal pass
  -ftree-parallelize-loops=   Enable automatic parallelization of loops
  -ftree-partial-pre          In SSA-PRE optimization on trees, enable partial-
                              partial redundancy elimination
  -ftree-phiprop              Enable hoisting loads from conditional pointers.
  -ftree-pre                  Enable SSA-PRE optimization on trees
  -ftree-pta                  Perform function-local points-to analysis on
                              trees.
  -ftree-reassoc              Enable reassociation on tree level
  -ftree-salias               Does nothing.  Preserved for backward
                              compatibility.
  -ftree-scev-cprop           Enable copy propagation of scalar-evolution
                              information.
  -ftree-sink                 Enable SSA code sinking on trees
  -ftree-slp-vectorize        Enable basic block vectorization (SLP) on trees
  -ftree-slsr                 Perform straight-line strength reduction
  -ftree-sra                  Perform scalar replacement of aggregates
  -ftree-store-ccp            Does nothing.  Preserved for backward
                              compatibility.
  -ftree-store-copy-prop      Does nothing.  Preserved for backward
                              compatibility.
  -ftree-switch-conversion    Perform conversions of switch initializations.
  -ftree-tail-merge           Enable tail merging on trees
  -ftree-ter                  Replace temporary expressions in the SSA->normal
                              pass
  -ftree-vect-loop-version    Does nothing. Preserved for backward
                              compatibility.
  -ftree-vectorize            Enable vectorization on trees
  -ftree-vectorizer-verbose=  Does nothing.  Preserved for backward
                              compatibility.
  -ftree-vrp                  Perform Value Range Propagation on trees
  -funit-at-a-time            Compile whole compilation unit at a time
  -funroll-all-loops          Perform loop unrolling for all loops
  -funroll-loops              Perform loop unrolling when iteration count is
                              known
  -funsafe-loop-optimizations Allow loop optimizations to assume that the loops
                              behave in normal way
  -funsafe-math-optimizations Allow math optimizations that may violate IEEE or
                              ISO standards
  -funswitch-loops            Perform loop unswitching
  -funwind-tables             Just generate unwind tables for exception handling
  -fuse-ld=bfd                Use the bfd linker instead of the default linker
  -fuse-ld=gold               Use the gold linker instead of the default linker
  -fuse-linker-plugin         This switch lacks documentation
  -fvar-tracking              Perform variable tracking
  -fvar-tracking-assignments  Perform variable tracking by annotating
                              assignments
  -fvar-tracking-assignments-toggle Toggle -fvar-tracking-assignments
  -fvar-tracking-uninit       Perform variable tracking and also tag variables
                              that are uninitialized
  -fvariable-expansion-in-unroller Apply variable expansion when loops are
                              unrolled
  -fvect-cost-model           Enables the dynamic vectorizer cost model. 
                              Preserved for backward compatibility.
  -fvect-cost-model=          Specifies the cost model for vectorization
  -fverbose-asm               Add extra commentary to assembler output
  -fversion                   This switch lacks documentation
  -fvisibility=[default|internal|hidden|protected] Set the default symbol
                              visibility
  -fvpt                       Use expression value profiles in optimizations
  -fvtable-verify=            Validate vtable pointers before using them.
  -fvtv-counts                Output vtable verification counters.
  -fvtv-debug                 Output vtable verification pointer sets
                              information.
  -fweb                       Construct webs and split unrelated uses of single
                              variable
  -fwhole-program             Perform whole program optimizations
  -fwrapv                     Assume signed arithmetic overflow wraps around
  -fzee                       Does nothing.  Preserved for backward
                              compatibility.
  -fzero-initialized-in-bss   Put zero initialized data in the bss section
  -g                          Generate debug information in default format
  -gcoff                      Generate debug information in COFF format
  -gdwarf                     Generate debug information in default version of
                              DWARF format
  -gdwarf-                    Generate debug information in DWARF v2 (or later)
                              format
  -ggdb                       Generate debug information in default extended
                              format
  -ggnu-pubnames              Generate DWARF pubnames and pubtypes sections
                              with GNU extensions.
  -gno-pubnames               Don't generate DWARF pubnames and pubtypes
                              sections.
  -gno-record-gcc-switches    Don't record gcc command line switches in DWARF
                              DW_AT_producer.
  -gno-split-dwarf            Don't generate debug information in separate .dwo
                              files
  -gno-strict-dwarf           Emit DWARF additions beyond selected version
  -gpubnames                  Generate DWARF pubnames and pubtypes sections.
  -grecord-gcc-switches       Record gcc command line switches in DWARF
                              DW_AT_producer.
  -gsplit-dwarf               Generate debug information in separate .dwo files
  -gstabs                     Generate debug information in STABS format
  -gstabs+                    Generate debug information in extended STABS
                              format
  -gstrict-dwarf              Don't emit DWARF additions beyond selected version
  -gtoggle                    Toggle debug information generation
  -gvms                       Generate debug information in VMS format
  -gxcoff                     Generate debug information in XCOFF format
  -gxcoff+                    Generate debug information in extended XCOFF
                              format
  -gz                         Generate compressed debug sections
  -gz=<format>                Generate compressed debug sections in format
                              <format>
  -imultiarch <dir>           Set <dir> to be the multiarch include subdirectory
  -iplugindir=<dir>           Set <dir> to be the default plugin directory
  -o <file>                   Place output into <file>
  -p                          Enable function profiling
  -pedantic                   This switch lacks documentation
  -pedantic-errors            Like -pedantic but issue them as errors
  -quiet                      Do not display functions compiled or elapsed time
  -v                          Enable verbose output
  -version                    Display the compiler's version
  -w                          Suppress warnings

The following options take joined arguments:
  --assert=                   This switch lacks documentation
  --define-macro=             This switch lacks documentation
  --dump=                     This switch lacks documentation
  --help=<class>              Display descriptions of a specific class of
                              options.  <class> is one or more of optimizers,
                              target, warnings, undocumented, params
  --imacros=                  This switch lacks documentation
  --include-directory-after=  This switch lacks documentation
  --include-directory=        This switch lacks documentation
  --include-prefix=           This switch lacks documentation
  --include-with-prefix-after= This switch lacks documentation
  --include-with-prefix-before= This switch lacks documentation
  --include-with-prefix=      This switch lacks documentation
  --include=                  This switch lacks documentation
  --output-class-directory=   This switch lacks documentation
  --output-pch=               This switch lacks documentation
  --output=                   This switch lacks documentation
  --param=                    This switch lacks documentation
  --resource=                 This switch lacks documentation
  --undefine-macro=           This switch lacks documentation
  -A<question>=<answer>       Assert the <answer> to <question>.  Putting '-'
                              before <question> disables the <answer> to
                              <question>
  -D<macro>[=<val>]           Define a <macro> with <val> as its value.  If
                              just <macro> is given, <val> is taken to be 1
  -F <dir>                    Add <dir> to the end of the main framework
                              include path
  -G<number>                  Put global and static data smaller than <number>
                              bytes into a special section (on some targets)
  -I <dir>                    Add <dir> to the end of the main include path
  -J<directory>               Put MODULE files in 'directory'
  -L                          This switch lacks documentation
  -MF <file>                  Write dependency output to the given file
  -MQ <target>                Add a MAKE-quoted target
  -MT <target>                Add an unquoted target
  -O<number>                  Set optimization level to <number>
  -U<macro>                   Undefine <macro>
  -Wabi=                      Warn about things that change between the current
                              -fabi-version and the specified version
  -Warray-bounds=             Warn if an array is accessed out of bounds
  -Werror=                    Treat specified warning as error
  -Wformat=                   Warn about printf/scanf/strftime/strfmon format
                              string anomalies
  -Wframe-larger-than=<number> Warn if a function's stack frame requires more
                              than <number> bytes
  -Wlarger-than-              This switch lacks documentation
  -Wlarger-than=<number>      Warn if an object is larger than <number> bytes
  -Wnormalized=<none|id|nfc|nfkc> Warn about non-normalised Unicode strings
  -Wstack-usage=              Warn if stack usage might be larger than
                              specified amount
  -Wstrict-aliasing=          Warn about code which might break strict aliasing
                              rules
  -Wstrict-overflow=          Warn about optimizations that assume that signed
                              overflow is undefined
  -aux-info=                  This switch lacks documentation
  -cpp=                       This switch lacks documentation
  -d<letters>                 Enable dumps from specific passes of the compiler
  --CLASSPATH                 Deprecated; use --classpath instead
  -fRTS=                      Select the runtime
  -fabi-compat-version=       The version of the C++ ABI used for -Wabi
                              warnings and link compatibility aliases
  -fabi-version=              The version of the C++ ABI in use
  -fada-spec-parent=          -fada-spec-parent=unit  Dump Ada specs as child
                              units of given parent
  -falign-functions=          This switch lacks documentation
  -falign-jumps=              This switch lacks documentation
  -falign-labels=             This switch lacks documentation
  -falign-loops=              This switch lacks documentation
  -fasan-shadow-offset=<number> Use custom shadow memory offset.
  -fassume-compiled=          This switch lacks documentation
  -fauto-profile=             Use sample profile information for call graph
                              node weights. The profile file is specified in
                              the argument.
  -fblas-matmul-limit=<n>     Size of the smallest matrix for which matmul will
                              use BLAS
  --bootclasspath=<path>      Replace system path
  -fbuiltin-                  This switch lacks documentation
  -fcall-saved-<register>     Mark <register> as being preserved across
                              functions
  -fcall-used-<register>      Mark <register> as being corrupted by function
                              calls
  -fcheck=[...]               Specify which runtime checks are to be performed
  --classpath=<path>          Set class path
  -fcoarray=<none|single|lib> Specify which coarray parallelization should be
                              used
  -fcompare-debug[=<opts>]    Compile with and without e.g. -gtoggle, and
                              compare the final-insns dump
  -fcompile-resource=         This switch lacks documentation
  -fconst-string-class=<name> Use class <name> for constant strings
  -fconstexpr-depth=<number>  Specify maximum constexpr recursion depth
  -fconvert=                  -fconvert=<big-endian|little-endian|native|swap>
                              The endianness used for unformatted files.
  -fdbg-cnt=<counter>:<limit>[,<counter>:<limit>,...] Set the debug counter
                              limit.   
  -fdebug-prefix-map=         Map one directory name to another in debug
                              information
  -fdiagnostics-color=[never|always|auto] Colorize diagnostics
  -fdiagnostics-show-location=[once|every-line] How often to emit source
                              location at the beginning of line-wrapped
                              diagnostics
  -fdisable-                  -fdisable-[tree|rtl|ipa]-<pass>=range1+range2
                              disables an optimization pass
  -fdisable-assertions=       This switch lacks documentation
  -fdump-<type>               Dump various compiler internals to a file
  -fdump-final-insns=filename Dump to filename the insns at the end of
                              translation
  -fdump-go-spec=filename     Write all declarations to file as Go code
  -femit-struct-debug-detailed=<spec-list> Detailed reduced debug info for
                              structs
  -fenable-                   -fenable-[tree|rtl|ipa]-<pass>=range1+range2
                              enables an optimization pass
  -fenable-assertions=        This switch lacks documentation
  --encoding=<encoding>       Choose input encoding (defaults from your locale)
  -fexcess-precision=[fast|standard] Specify handling of excess floating-point
                              precision
  -fexec-charset=<cset>       Convert all strings and character constants to
                              character set <cset>
  --extdirs=<path>            Set the extension directory path
  -ffixed-<register>          Mark <register> as being unavailable to the
                              compiler
  -ffixed-line-length-<n>     Use n as character line width in fixed mode
  -ffp-contract=              -ffp-contract=[off|on|fast] Perform floating-
                              point expression contraction.
  -ffpe-summary=[...]         Print summary of floating point exceptions
  -ffpe-trap=[...]            Stop on following floating point exceptions
  -ffree-line-length-<n>      Use n as character line width in free mode
  -fgo-dump-<type>            Dump Go frontend internal information
  -fgo-optimize-<type>        Turn on optimization passes in the frontend
  -fgo-pkgpath=<string>       Set Go package path
  -fgo-prefix=<string>        Set package-specific prefix for exported Go names
  -fgo-relative-import-path=  -fgo-relative-import-path=<path> Treat a relative
                              import as relative to path
  -fhelp=                     This switch lacks documentation
  -finit-character=<n>        Initialize local character variables to ASCII
                              value n
  -finit-integer=<n>          Initialize local integer variables to n
  -finit-logical=<true|false> Initialize local logical variables
  -finit-real=<zero|snan|nan|inf|-inf> Initialize local real variables
  -finline-limit-             This switch lacks documentation
  -finline-limit=<number>     Limit the size of inlined functions to <number>
  -finput-charset=<cset>      Specify the default character set for source files
  -finstrument-functions-exclude-file-list= -finstrument-functions-exclude-file-
                              list=filename,...  Do not instrument functions
                              listed in files
  -finstrument-functions-exclude-function-list= -finstrument-functions-exclude-
                              function-list=name,...  Do not instrument listed
                              functions
  -fintrinsic-modules-path=   Specify where to find the compiled intrinsic
                              modules
  -fira-algorithm=            -fira-algorithm=[CB|priority] Set the used IRA
                              algorithm
  -fira-region=               -fira-region=[one|all|mixed] Set regions for IRA
  -fira-verbose=<number>      Control IRA's level of diagnostic messages.
  -fvisibility=[private|protected|public|package] Set the default symbol
                              visibility
  -flto-compression-level=<number> Use zlib compression level <number> for IL
  -flto-partition=            Specify the algorithm to partition symbols and
                              vars at linktime
  -flto=                      Link-time optimization with number of parallel
                              jobs or jobserver.
  -fltrans-output-list=       Specify a file to which a list of files output by
                              LTRANS is written.
  -fmax-array-constructor=<n> Maximum number of objects in an array constructor
  -fmax-errors=<number>       Maximum number of errors to report
  -fmax-identifier-length=<n> Maximum identifier length
  -fmax-stack-var-size=<n>    Size in bytes of the largest array that will be
                              put on the stack
  -fmax-subrecord-length=<n>  Maximum length for subrecords
  -fmessage-length=<number>   Limit diagnostics to <number> characters per
                              line.  0 suppresses line-wrapping
  -fname-mangling-version-    This switch lacks documentation
  -fobjc-abi-version=         Specify which ABI to use for Objective-C family
                              code and meta-data generation.
  -foffload-abi=              -foffload-abi=[lp64|ilp32]     Set the ABI to use
                              in an offload compiler
  -foffload=                  -foffload=<targets>=<options>  Specify offloading
                              targets and options for them
  -fopt-info[-<type>=filename] Dump compiler optimization details
  -foutput-class-dir=         This switch lacks documentation
  -fpack-struct=<number>      Set initial maximum structure member alignment
  -fplugin-arg-<name>-<key>[=<value>] Specify argument <key>=<value> for plugin
                              <name>
  -fplugin=                   Specify a plugin to load
  -fprofile-dir=              Set the top-level directory for storing the
                              profile data. The default is 'pwd'.
  -fprofile-generate=         Enable common options for generating profile info
                              for profile feedback directed optimizations, and
                              set -fprofile-dir=
  -fprofile-use=              Enable common options for performing profile
                              feedback directed optimizations, and set
                              -fprofile-dir=
  -frandom-seed=<number>      Make compile reproducible using <number>
  -fresolution=               The resolution file
  -fsanitize-recover=         After diagnosing undefined behavior attempt to
                              continue execution
  -fsanitize=                 Select what to sanitize
  -fsched-stalled-insns-dep=<number> Set dependence distance checking in
                              premature scheduling of queued insns
  -fsched-stalled-insns=<number> Set number of queued insns that can be
                              prematurely scheduled
  -fsched-verbose=<number>    Set the verbosity level of the scheduler
  -fsimd-cost-model=          Specifies the vectorization cost model for code
                              marked with a simd directive
  -fsource-filename=          This switch lacks documentation
  -fsource=                   Set the source language version
  -fstack-check=[no|generic|specific] Insert stack checking code into the
                              program
  -fstack-limit-register=<register> Trap if the stack goes past <register>
  -fstack-limit-symbol=<name> Trap if the stack goes past symbol <name>
  -fstack-reuse=              -fstack-reuse=[all|named_vars|none] Set stack
                              reuse level for local variables.
  -ftabstop=<number>          Distance between tab stops for column reporting
  -ftarget=                   Set the target VM version
  -ftemplate-backtrace-limit= Set the maximum number of template instantiation
                              notes for a single warning or error
  -ftemplate-depth-           This switch lacks documentation
  -ftemplate-depth=<number>   Specify maximum template instantiation depth
  -ftls-model=[global-dynamic|local-dynamic|initial-exec|local-exec] Set the
                              default thread-local storage code generation model
  -ftrack-macro-expansion     This switch lacks documentation
  -ftrack-macro-expansion=    -ftrack-macro-expansion=<0|1|2>  Track locations
                              of tokens coming from macro expansion and display
                              them in error messages
  -ftree-parallelize-loops=   Enable automatic parallelization of loops
  -ftree-vectorizer-verbose=  Does nothing.  Preserved for backward
                              compatibility.
  -fvect-cost-model=          Specifies the cost model for vectorization
  -fvisibility=[default|internal|hidden|protected] Set the default symbol
                              visibility
  -fvtable-verify=            Validate vtable pointers before using them.
  -fwide-exec-charset=<cset>  Convert all wide strings and character constants
                              to character set <cset>
  -fwpa=                      Whole program analysis (WPA) mode with number of
                              parallel jobs specified.
  -g                          Generate debug information in default format
  -gant                       Catch typos
  -gcoff                      Generate debug information in COFF format
  -gdwarf                     Generate debug information in default version of
                              DWARF format
  -gdwarf-                    Generate debug information in DWARF v2 (or later)
                              format
  -ggdb                       Generate debug information in default extended
                              format
  -gnat<options>              Specify options to GNAT
  -gstabs                     Generate debug information in STABS format
  -gstabs+                    Generate debug information in extended STABS
                              format
  -gvms                       Generate debug information in VMS format
  -gxcoff                     Generate debug information in XCOFF format
  -gxcoff+                    Generate debug information in extended XCOFF
                              format
  -gz=<format>                Generate compressed debug sections in format
                              <format>
  -idirafter <dir>            Add <dir> to the end of the system include path
  -imacros <file>             Accept definition of macros in <file>
  -imultiarch <dir>           Set <dir> to be the multiarch include subdirectory
  -imultilib <dir>            Set <dir> to be the multilib include subdirectory
  -include <file>             Include the contents of <file> before other files
  -iplugindir=<dir>           Set <dir> to be the default plugin directory
  -iprefix <path>             Specify <path> as a prefix for next two options
  -iquote <dir>               Add <dir> to the end of the quote include path
  -isysroot <dir>             Set <dir> to be the system root directory
  -isystem <dir>              Add <dir> to the start of the system include path
  -iwithprefix <dir>          Add <dir> to the end of the system include path
  -iwithprefixbefore <dir>    Add <dir> to the end of the main include path
  -mabi=ABI                   Generate code that conforms to the given ABI
  -mabs=MODE                  Select the IEEE 754 ABS/NEG instruction execution
                              mode
  -march=ISA                  Generate code for the given ISA
  -mbranch-cost=COST          Set the cost of branches to roughly COST
                              instructions
  -mcode-readable=SETTING     Specify when instructions are allowed to access
                              code
  -mflush-func=FUNC           Use FUNC to flush the cache before calling stack
                              trampolines
  -mipsN                      Generate code for ISA level N
  -mnan=ENCODING              Select the IEEE 754 NaN data encoding
  -mr10k-cache-barrier=SETTING Specify when r10k cache barriers should be
                              inserted
  -mtune=PROCESSOR            Optimize the output for PROCESSOR
  -o <file>                   Place output into <file>

  Known MIPS ABIs (for use with the -mabi= option):
    32 64 eabi n32 o64

  Known MIPS CPUs (for use with the -march= and -mtune= options):
    10000 1004kc 1004kf 1004kf1_1 1004kf2_1 10k 12000 12k 14000 14k 16000 16k
    2000 20kc 24kc 24kec 24kef 24kef1_1 24kef2_1 24kefx 24kex 24kf 24kf1_1
    24kf2_1 24kfx 24kx 2k 3000 34kc 34kf 34kf1_1 34kf2_1 34kfx 34kn 34kx 3900 3k
    4000 4100 4111 4120 4130 4300 4400 4600 4650 4700 4k 4kc 4kec 4kem 4kep 4km
    4kp 4ksc 4ksd 5000 5400 5500 5900 5k 5kc 5kf 6000 6k 7000 74kc 74kf 74kf1_1
    74kf2_1 74kf3_2 74kfx 74kx 7k 8000 8k 9000 9k from-abi loongson2e loongson2f
    loongson3a m14k m14kc m14ke m14kec m4k mips1 mips2 mips3 mips32 mips32r2
    mips32r3 mips32r5 mips32r6 mips4 mips64 mips64r2 mips64r3 mips64r5 mips64r6
    native octeon octeon+ octeon2 octeon3 orion p5600 r10000 r1004kc r1004kf
    r1004kf1_1 r1004kf2_1 r10k r12000 r12k r14000 r14k r16000 r16k r2000 r20kc
    r24kc r24kec r24kef r24kef1_1 r24kef2_1 r24kefx r24kex r24kf r24kf1_1
    r24kf2_1 r24kfx r24kx r2k r3000 r34kc r34kf r34kf1_1 r34kf2_1 r34kfx r34kn
    r34kx r3900 r3k r4000 r4100 r4111 r4120 r4130 r4300 r4400 r4600 r4650 r4700
    r4k r4kc r4kec r4kem r4kep r4km r4kp r4ksc r4ksd r5000 r5400 r5500 r5900 r5k
    r5kc r5kf r6000 r6k r7000 r74kc r74kf r74kf1_1 r74kf2_1 r74kf3_2 r74kfx
    r74kx r7k r8000 r8k r9000 r9k rm7000 rm7k rm9000 rm9k sb1 sb1a sr71000 sr71k
    vr4100 vr4111 vr4120 vr4130 vr4300 vr5000 vr5400 vr5500 vr5k xlp xlr

  Valid arguments to -mcode-readable=:
    no pcrel yes

  Known MIPS IEEE 754 settings (for use with the -mabs= and -mnan= options):
    2008 legacy

  Known MIPS ISA levels (for use with the -mips option):
    1 2 3 32 32r2 32r3 32r5 32r6 4 64 64r2 64r3 64r5 64r6

  Valid arguments to -mr10k-cache-barrier=:
    load-store none store

The following options control optimizations:
  -O<number>                  Set optimization level to <number>
  -Ofast                      Optimize for speed disregarding exact standards
                              compliance
  -Og                         Optimize for debugging experience rather than
                              speed or size
  -Os                         Optimize for space rather than speed
  -faggressive-loop-optimizations Aggressively optimize loops using language
                              constraints
  -falign-functions           Align the start of functions
  -falign-jumps               Align labels which are only reached by jumping
  -falign-labels              Align all labels
  -falign-loops               Align the start of loops
  -fassociative-math          Allow optimization for floating-point arithmetic
                              which may change the result of the operation due
                              to rounding.
  -fasynchronous-unwind-tables Generate unwind tables that are exact at each
                              instruction boundary
  -fauto-inc-dec              Generate auto-inc/dec instructions
  -fbranch-count-reg          Replace add, compare, branch with branch on count
                              register
  -fbranch-probabilities      Use profiling information for branch probabilities
  -fbranch-target-load-optimize Perform branch target load optimization before
                              prologue / epilogue threading
  -fbranch-target-load-optimize2 Perform branch target load optimization after
                              prologue / epilogue threading
  -fbtr-bb-exclusive          Restrict target load migration not to re-use
                              registers in any basic block
  -fcaller-saves              Save registers around function calls
  -fcombine-stack-adjustments Looks for opportunities to reduce stack
                              adjustments and stack references.
  -fcompare-elim              Perform comparison elimination after register
                              allocation has finished
  -fconserve-stack            Do not perform optimizations increasing
                              noticeably stack usage
  -fcprop-registers           Perform a register copy-propagation optimization
                              pass
  -fcrossjumping              Perform cross-jumping optimization
  -fcse-follow-jumps          When running CSE, follow jumps to their targets
  -fcx-fortran-rules          Complex multiplication and division follow
                              Fortran rules
  -fcx-limited-range          Omit range reduction step when performing complex
                              division
  -fdce                       Use the RTL dead code elimination pass
  -fdefer-pop                 Defer popping functions args from stack until
                              later
  -fdelayed-branch            Attempt to fill delay slots of branch instructions
  -fdelete-dead-exceptions    Delete dead instructions that may throw exceptions
  -fdelete-null-pointer-checks Delete useless null pointer checks
  -fdevirtualize              Try to convert virtual calls to direct ones.
  -fdevirtualize-speculatively Perform speculative devirtualization
  -fdse                       Use the RTL dead store elimination pass
  -fearly-inlining            Perform early inlining
  -fexceptions                Enable exception handling
  -fexpensive-optimizations   Perform a number of minor, expensive optimizations
  -ffinite-math-only          Assume no NaNs or infinities are generated
  -ffloat-store               Don't allocate floats and doubles in extended-
                              precision registers
  -fforward-propagate         Perform a forward propagation pass on RTL
  -ffp-contract=              -ffp-contract=[off|on|fast] Perform floating-
                              point expression contraction.
  -ffunction-cse              Allow function addresses to be held in registers
  -fgcse                      Perform global common subexpression elimination
  -fgcse-after-reload         Perform global common subexpression elimination
                              after register allocation has finished
  -fgcse-las                  Perform redundant load after store elimination in
                              global common subexpression elimination
  -fgcse-lm                   Perform enhanced load motion during global common
                              subexpression elimination
  -fgcse-sm                   Perform store motion after global common
                              subexpression elimination
  -fgraphite                  Enable in and out of Graphite representation
  -fgraphite-identity         Enable Graphite Identity transformation
  -fguess-branch-probability  Enable guessing of branch probabilities
  -fhandle-exceptions         This switch lacks documentation
  -fhoist-adjacent-loads      Enable hoisting adjacent loads to encourage
                              generating conditional move instructions
  -fif-conversion             Perform conversion of conditional jumps to
                              branchless equivalents
  -fif-conversion2            Perform conversion of conditional jumps to
                              conditional execution
  -findirect-inlining         Perform indirect inlining
  -finline                    Enable inlining of function declared "inline",
                              disabling disables all inlining
  -finline-atomics            Inline __atomic operations when a lock free
                              instruction sequence is available.
  -finline-functions          Integrate functions not declared "inline" into
                              their callers when profitable
  -finline-functions-called-once Integrate functions only required by their
                              single caller
  -finline-small-functions    Integrate functions into their callers when code
                              size is known not to grow
  -fipa-cp                    Perform interprocedural constant propagation
  -fipa-cp-alignment          Perform alignment discovery and propagation to
                              make Interprocedural constant propagation stronger
  -fipa-cp-clone              Perform cloning to make Interprocedural constant
                              propagation stronger
  -fipa-icf                   Perform Identical Code Folding for functions and
                              read-only variables
  -fipa-icf-functions         Perform Identical Code Folding for functions
  -fipa-profile               Perform interprocedural profile propagation
  -fipa-pta                   Perform interprocedural points-to analysis
  -fipa-pure-const            Discover pure and const functions
  -fipa-ra                    Use caller save register across calls if possible
  -fipa-reference             Discover readonly and non addressable static
                              variables
  -fipa-sra                   Perform interprocedural reduction of aggregates
  -fira-algorithm=            -fira-algorithm=[CB|priority] Set the used IRA
                              algorithm
  -fira-hoist-pressure        Use IRA based register pressure calculation in
                              RTL hoist optimizations.
  -fira-loop-pressure         Use IRA based register pressure calculation in
                              RTL loop optimizations.
  -fira-region=               -fira-region=[one|all|mixed] Set regions for IRA
  -fira-share-save-slots      Share slots for saving different hard registers.
  -fira-share-spill-slots     Share stack slots for spilled pseudo-registers.
  -fisolate-erroneous-paths-attribute Detect paths that trigger erroneous or
                              undefined behavior due a null value being used in
                              a way forbidden by a returns_nonnull or nonnull
                              attribute.  Isolate those paths from the main
                              control flow and turn the statement with
                              erroneous or undefined behavior into a trap. 
  -fisolate-erroneous-paths-dereference Detect paths that trigger erroneous or
                              undefined behavior due to dereferencing a null
                              pointer.  Isolate those paths from the main
                              control flow and turn the statement with
                              erroneous or undefined behavior into a trap.
  -fivopts                    Optimize induction variables on trees
  -fjump-tables               Use jump tables for sufficiently large switch
                              statements
  -flifetime-dse              Tell DSE that the storage for a C++ object is
                              dead when the constructor starts and when the
                              destructor finishes.
  -flive-range-shrinkage      Relief of register pressure through live range
                              shrinkage
  -floop-block                Enable Loop Blocking transformation
  -floop-interchange          Enable Loop Interchange transformation
  -floop-nest-optimize        Enable the ISL based loop nest optimizer
  -floop-parallelize-all      Mark all loops as parallel
  -floop-strip-mine           Enable Loop Strip Mining transformation
  -floop-unroll-and-jam       Enable Loop Unroll Jam transformation
  -flra-remat                 Do CFG-sensitive rematerialization in LRA
  -fmath-errno                Set errno after built-in math functions
  -fmodulo-sched              Perform SMS based modulo scheduling before the
                              first scheduling pass
  -fmodulo-sched-allow-regmoves Perform SMS based modulo scheduling with
                              register moves allowed
  -fmove-loop-invariants      Move loop invariant computations out of loops
  -fnon-call-exceptions       Support synchronous non-call exceptions
  -fnothrow-opt               Treat a throw() exception specification as
                              noexcept to improve code size
  -fomit-frame-pointer        When possible do not generate stack frames
  -fopt-info                  Enable all optimization info dumps on stderr
  -foptimize-sibling-calls    Optimize sibling and tail recursive calls
  -foptimize-strlen           Enable string length optimizations on trees
  -fpack-struct               Pack structure members together without holes
  -fpack-struct=<number>      Set initial maximum structure member alignment
  -fpartial-inlining          Perform partial inlining
  -fpeel-loops                Perform loop peeling
  -fpeephole                  Enable machine specific peephole optimizations
  -fpeephole2                 Enable an RTL peephole pass before sched2
  -fpredictive-commoning      Run predictive commoning optimization.
  -fprefetch-loop-arrays      Generate prefetch instructions, if available, for
                              arrays in loops
  -freciprocal-math           Same as -fassociative-math for expressions which
                              include division.
  -freg-struct-return         Return small aggregates in registers
  -frename-registers          Perform a register renaming optimization pass
  -freorder-blocks            Reorder basic blocks to improve code placement
  -freorder-blocks-and-partition Reorder basic blocks and partition into hot
                              and cold sections
  -freorder-functions         Reorder functions to improve code placement
  -frerun-cse-after-loop      Add a common subexpression elimination pass after
                              loop optimizations
  -freschedule-modulo-scheduled-loops Enable/Disable the traditional scheduling
                              in loops that already passed modulo scheduling
  -frounding-math             Disable optimizations that assume default FP
                              rounding behavior
  -frtti                      Generate run time type descriptor information
  -fsched-critical-path-heuristic Enable the critical path heuristic in the
                              scheduler
  -fsched-dep-count-heuristic Enable the dependent count heuristic in the
                              scheduler
  -fsched-group-heuristic     Enable the group heuristic in the scheduler
  -fsched-interblock          Enable scheduling across basic blocks
  -fsched-last-insn-heuristic Enable the last instruction heuristic in the
                              scheduler
  -fsched-pressure            Enable register pressure sensitive insn scheduling
  -fsched-rank-heuristic      Enable the rank heuristic in the scheduler
  -fsched-spec                Allow speculative motion of non-loads
  -fsched-spec-insn-heuristic Enable the speculative instruction heuristic in
                              the scheduler
  -fsched-spec-load           Allow speculative motion of some loads
  -fsched-spec-load-dangerous Allow speculative motion of more loads
  -fsched-stalled-insns       Allow premature scheduling of queued insns
  -fsched-stalled-insns-dep   Set dependence distance checking in premature
                              scheduling of queued insns
  -fsched-stalled-insns-dep=<number> Set dependence distance checking in
                              premature scheduling of queued insns
  -fsched-stalled-insns=<number> Set number of queued insns that can be
                              prematurely scheduled
  -fsched2-use-superblocks    If scheduling post reload, do superblock
                              scheduling
  -fschedule-fusion           Perform a target dependent instruction fusion
                              optimization pass
  -fschedule-insns            Reschedule instructions before register allocation
  -fschedule-insns2           Reschedule instructions after register allocation
  -fsection-anchors           Access data in the same section from shared
                              anchor points
  -fsel-sched-pipelining      Perform software pipelining of inner loops during
                              selective scheduling
  -fsel-sched-pipelining-outer-loops Perform software pipelining of outer loops
                              during selective scheduling
  -fsel-sched-reschedule-pipelined Reschedule pipelined regions without
                              pipelining
  -fselective-scheduling      Schedule instructions using selective scheduling
                              algorithm
  -fselective-scheduling2     Run selective scheduling after reload
  -fshort-double              Use the same size for double as for float
  -fshort-enums               Use the narrowest integer type possible for
                              enumeration types
  -fshort-wchar               Force the underlying type for "wchar_t" to be
                              "unsigned short"
  -fshrink-wrap               Emit function prologues only before parts of the
                              function that need it, rather than at the top of
                              the function.
  -fsignaling-nans            Disable optimizations observable by IEEE
                              signaling NaNs
  -fsigned-zeros              Disable floating point optimizations that ignore
                              the IEEE signedness of zero
  -fsimd-cost-model=          Specifies the vectorization cost model for code
                              marked with a simd directive
  -fsingle-precision-constant Convert floating point constants to single
                              precision constants
  -fsplit-ivs-in-unroller     Split lifetimes of induction variables when loops
                              are unrolled
  -fsplit-wide-types          Split wide types into independent registers
  -fssa-phiopt                Optimize conditional patterns using SSA PHI nodes
  -fstack-reuse=              -fstack-reuse=[all|named_vars|none] Set stack
                              reuse level for local variables.
  -fstdarg-opt                Optimize amount of stdarg registers saved to
                              stack at start of function
  -fstrict-aliasing           Assume strict aliasing rules apply
  -fstrict-enums              Assume that values of enumeration type are always
                              within the minimum range of that type
  -fstrict-overflow           Treat signed overflow as undefined
  -fstrict-volatile-bitfields Force bitfield accesses to match their type width
  -fthread-jumps              Perform jump threading optimizations
  -fno-threadsafe-statics     Do not generate thread-safe code for initializing
                              local statics
  -ftracer                    Perform superblock formation via tail duplication
  -ftrapping-math             Assume floating-point operations can trap
  -ftrapv                     Trap for signed overflow in addition, subtraction
                              and multiplication
  -ftree-bit-ccp              Enable SSA-BIT-CCP optimization on trees
  -ftree-builtin-call-dce     Enable conditional dead code elimination for
                              builtin calls
  -ftree-ccp                  Enable SSA-CCP optimization on trees
  -ftree-ch                   Enable loop header copying on trees
  -ftree-coalesce-inlined-vars Enable coalescing of copy-related user variables
                              that are inlined
  -ftree-coalesce-vars        Enable coalescing of all copy-related user
                              variables
  -ftree-copy-prop            Enable copy propagation on trees
  -ftree-copyrename           Replace SSA temporaries with better names in
                              copies
  -ftree-cselim               Transform condition stores into unconditional ones
  -ftree-dce                  Enable SSA dead code elimination optimization on
                              trees
  -ftree-dominator-opts       Enable dominator optimizations
  -ftree-dse                  Enable dead store elimination
  -ftree-forwprop             Enable forward propagation on trees
  -ftree-fre                  Enable Full Redundancy Elimination (FRE) on trees
  -ftree-loop-distribute-patterns Enable loop distribution for patterns
                              transformed into a library call
  -ftree-loop-distribution    Enable loop distribution on trees
  -ftree-loop-if-convert      Convert conditional jumps in innermost loops to
                              branchless equivalents
  -ftree-loop-if-convert-stores Also if-convert conditional jumps containing
                              memory writes
  -ftree-loop-im              Enable loop invariant motion on trees
  -ftree-loop-ivcanon         Create canonical induction variables in loops
  -ftree-loop-optimize        Enable loop optimizations on tree level
  -ftree-loop-vectorize       Enable loop vectorization on trees
  -ftree-lrs                  Perform live range splitting during the SSA-
                              >normal pass
  -ftree-parallelize-loops=   Enable automatic parallelization of loops
  -ftree-partial-pre          In SSA-PRE optimization on trees, enable partial-
                              partial redundancy elimination
  -ftree-phiprop              Enable hoisting loads from conditional pointers.
  -ftree-pre                  Enable SSA-PRE optimization on trees
  -ftree-pta                  Perform function-local points-to analysis on
                              trees.
  -ftree-reassoc              Enable reassociation on tree level
  -ftree-scev-cprop           Enable copy propagation of scalar-evolution
                              information.
  -ftree-sink                 Enable SSA code sinking on trees
  -ftree-slp-vectorize        Enable basic block vectorization (SLP) on trees
  -ftree-slsr                 Perform straight-line strength reduction
  -ftree-sra                  Perform scalar replacement of aggregates
  -ftree-switch-conversion    Perform conversions of switch initializations.
  -ftree-tail-merge           Enable tail merging on trees
  -ftree-ter                  Replace temporary expressions in the SSA->normal
                              pass
  -ftree-vectorize            Enable vectorization on trees
  -ftree-vrp                  Perform Value Range Propagation on trees
  -funroll-all-loops          Perform loop unrolling for all loops
  -funroll-loops              Perform loop unrolling when iteration count is
                              known
  -funsafe-loop-optimizations Allow loop optimizations to assume that the loops
                              behave in normal way
  -funsafe-math-optimizations Allow math optimizations that may violate IEEE or
                              ISO standards
  -funswitch-loops            Perform loop unswitching
  -funwind-tables             Just generate unwind tables for exception handling
  -fvar-tracking              Perform variable tracking
  -fvar-tracking-assignments  Perform variable tracking by annotating
                              assignments
  -fvar-tracking-assignments-toggle Toggle -fvar-tracking-assignments
  -fvar-tracking-uninit       Perform variable tracking and also tag variables
                              that are uninitialized
  -fvariable-expansion-in-unroller Apply variable expansion when loops are
                              unrolled
  -fvect-cost-model=          Specifies the cost model for vectorization
  -fvpt                       Use expression value profiles in optimizations
  -fweb                       Construct webs and split unrelated uses of single
                              variable
  -fwrapv                     Assume signed arithmetic overflow wraps around
  -mframe-header-opt          Optimize frame header

The --param option recognizes the following as parameters:
  predictable-branch-outcome  Maximal estimated outcome of branch considered
                              predictable
  inline-min-speedup          The minimal estimated speedup allowing inliner to
                              ignore inline-insns-single and inline-isnsns-auto
  max-inline-insns-single     The maximum number of instructions in a single
                              function eligible for inlining
  max-inline-insns-auto       The maximum number of instructions when
                              automatically inlining
  max-inline-insns-recursive  The maximum number of instructions inline
                              function can grow to via recursive inlining
  max-inline-insns-recursive-auto The maximum number of instructions non-inline
                              function can grow to via recursive inlining
  max-inline-recursive-depth  The maximum depth of recursive inlining for
                              inline functions
  max-inline-recursive-depth-auto The maximum depth of recursive inlining for
                              non-inline functions
  min-inline-recursive-probability Inline recursively only when the probability
                              of call being executed exceeds the parameter
  max-early-inliner-iterations The maximum number of nested indirect inlining
                              performed by early inliner
  comdat-sharing-probability  Probability that COMDAT function will be shared
                              with different compilation unit
  partial-inlining-entry-probability Maximum probability of the entry BB of
                              split region (in percent relative to entry BB of
                              the function) to make partial inlining happen
  max-variable-expansions-in-unroller If -fvariable-expansion-in-unroller is
                              used, the maximum number of times that an
                              individual variable will be expanded during loop
                              unrolling
  min-vect-loop-bound         If -ftree-vectorize is used, the minimal loop
                              bound of a loop to be considered for vectorization
  max-delay-slot-insn-search  The maximum number of instructions to consider to
                              fill a delay slot
  max-delay-slot-live-search  The maximum number of instructions to consider to
                              find accurate live register information
  max-pending-list-length     The maximum length of scheduling's pending
                              operations list
  max-modulo-backtrack-attempts The maximum number of backtrack attempts the
                              scheduler should make when modulo scheduling a
                              loop
  large-function-insns        The size of function body to be considered large
  large-function-growth       Maximal growth due to inlining of large function
                              (in percent)
  large-unit-insns            The size of translation unit to be considered
                              large
  inline-unit-growth          How much can given compilation unit grow because
                              of the inlining (in percent)
  ipcp-unit-growth            How much can given compilation unit grow because
                              of the interprocedural constant propagation (in
                              percent)
  early-inlining-insns        Maximal estimated growth of function body caused
                              by early inlining of single call
  large-stack-frame           The size of stack frame to be considered large
  large-stack-frame-growth    Maximal stack frame growth due to inlining (in
                              percent)
  max-gcse-memory             The maximum amount of memory to be allocated by
                              GCSE
  max-gcse-insertion-ratio    The maximum ratio of insertions to deletions of
                              expressions in GCSE
  gcse-after-reload-partial-fraction The threshold ratio for performing partial
                              redundancy elimination after reload
  gcse-after-reload-critical-fraction The threshold ratio of critical edges
                              execution count that permit performing redundancy
                              elimination after reload
  gcse-cost-distance-ratio    Scaling factor in calculation of maximum distance
                              an expression can be moved by GCSE optimizations
  gcse-unrestricted-cost      Cost at which GCSE optimizations will not
                              constraint the distance an expression can travel
  max-hoist-depth             Maximum depth of search in the dominator tree for
                              expressions to hoist
  max-unrolled-insns          The maximum number of instructions to consider to
                              unroll in a loop
  max-average-unrolled-insns  The maximum number of instructions to consider to
                              unroll in a loop on average
  max-unroll-times            The maximum number of unrollings of a single loop
  max-peeled-insns            The maximum number of insns of a peeled loop
  max-peel-times              The maximum number of peelings of a single loop
  max-peel-branches           The maximum number of branches on the path
                              through the peeled sequence
  max-completely-peeled-insns The maximum number of insns of a completely
                              peeled loop
  max-completely-peel-times   The maximum number of peelings of a single loop
                              that is peeled completely
  max-once-peeled-insns       The maximum number of insns of a peeled loop that
                              rolls only once
  max-completely-peel-loop-nest-depth The maximum depth of a loop nest we
                              completely peel
  max-unswitch-insns          The maximum number of insns of an unswitched loop
  max-unswitch-level          The maximum number of unswitchings in a single
                              loop
  max-iterations-to-track     Bound on the number of iterations the brute force
                              # of iterations analysis algorithm evaluates
  max-iterations-computation-cost Bound on the cost of an expression to compute
                              the number of iterations
  sms-max-ii-factor           A factor for tuning the upper bound that swing
                              modulo scheduler uses for scheduling a loop
  sms-min-sc                  The minimum value of stage count that swing
                              modulo scheduler will generate.
  sms-dfa-history             The number of cycles the swing modulo scheduler
                              considers when checking conflicts using DFA
  sms-loop-average-count-threshold A threshold on the average loop count
                              considered by the swing modulo scheduler
  hot-bb-count-ws-permille    A basic block profile count is considered hot if
                              it contributes to the given permillage of the
                              entire profiled execution
  hot-bb-frequency-fraction   Select fraction of the maximal frequency of
                              executions of basic block in function given basic
                              block needs to have to be considered hot
  unlikely-bb-count-fraction  The minimum fraction of profile runs a given
                              basic block execution count must be not to be
                              considered unlikely
  align-threshold             Select fraction of the maximal frequency of
                              executions of basic block in function given basic
                              block get alignment
  align-loop-iterations       Loops iterating at least selected number of
                              iterations will get loop alignement.
  max-predicted-iterations    The maximum number of loop iterations we predict
                              statically
  builtin-expect-probability  Set the estimated probability in percentage for
                              builtin expect. The default value is 90%
                              probability.
  tracer-dynamic-coverage-feedback The percentage of function, weighted by
                              execution frequency, that must be covered by
                              trace formation. Used when profile feedback is
                              available
  tracer-dynamic-coverage     The percentage of function, weighted by execution
                              frequency, that must be covered by trace
                              formation. Used when profile feedback is not
                              available
  tracer-max-code-growth      Maximal code growth caused by tail duplication
                              (in percent)
  tracer-min-branch-ratio     Stop reverse growth if the reverse probability of
                              best edge is less than this threshold (in percent)
  tracer-min-branch-probability-feedback Stop forward growth if the probability
                              of best edge is less than this threshold (in
                              percent). Used when profile feedback is available
  tracer-min-branch-probability Stop forward growth if the probability of best
                              edge is less than this threshold (in percent).
                              Used when profile feedback is not available
  max-crossjump-edges         The maximum number of incoming edges to consider
                              for crossjumping
  min-crossjump-insns         The minimum number of matching instructions to
                              consider for crossjumping
  max-grow-copy-bb-insns      The maximum expansion factor when copying basic
                              blocks
  max-goto-duplication-insns  The maximum number of insns to duplicate when
                              unfactoring computed gotos
  max-cse-path-length         The maximum length of path considered in cse
  max-cse-insns               The maximum instructions CSE process before
                              flushing
  lim-expensive               The minimum cost of an expensive expression in
                              the loop invariant motion
  iv-consider-all-candidates-bound Bound on number of candidates below that all
                              candidates are considered in iv optimizations
  iv-max-considered-uses      Bound on number of iv uses in loop optimized in
                              iv optimizations
  iv-always-prune-cand-set-bound If number of candidates in the set is smaller,
                              we always try to remove unused ivs during its
                              optimization
  scev-max-expr-size          Bound on size of expressions used in the scalar
                              evolutions analyzer
  scev-max-expr-complexity    Bound on the complexity of the expressions in the
                              scalar evolutions analyzer
  omega-max-vars              Bound on the number of variables in Omega
                              constraint systems
  omega-max-geqs              Bound on the number of inequalities in Omega
                              constraint systems
  omega-max-eqs               Bound on the number of equalities in Omega
                              constraint systems
  omega-max-wild-cards        Bound on the number of wild cards in Omega
                              constraint systems
  omega-hash-table-size       Bound on the size of the hash table in Omega
                              constraint systems
  omega-max-keys              Bound on the number of keys in Omega constraint
                              systems
  omega-eliminate-redundant-constraints When set to 1, use expensive methods to
                              eliminate all redundant constraints
  vect-max-version-for-alignment-checks Bound on number of runtime checks
                              inserted by the vectorizer's loop versioning for
                              alignment check
  vect-max-version-for-alias-checks Bound on number of runtime checks inserted
                              by the vectorizer's loop versioning for alias
                              check
  vect-max-peeling-for-alignment Max number of loop peels to enhancement
                              alignment of data references in a loop
  max-cselib-memory-locations The maximum memory locations recorded by cselib
  ggc-min-expand              Minimum heap expansion to trigger garbage
                              collection, as a percentage of the total size of
                              the heap
  ggc-min-heapsize            Minimum heap size before we start collecting
                              garbage, in kilobytes
  max-reload-search-insns     The maximum number of instructions to search
                              backward when looking for equivalent reload
  sink-frequency-threshold    Target block's relative execution frequency (as a
                              percentage) required to sink a statement
  max-sched-region-blocks     The maximum number of blocks in a region to be
                              considered for interblock scheduling
  max-sched-region-insns      The maximum number of insns in a region to be
                              considered for interblock scheduling
  max-pipeline-region-blocks  The maximum number of blocks in a region to be
                              considered for interblock scheduling
  max-pipeline-region-insns   The maximum number of insns in a region to be
                              considered for interblock scheduling
  min-spec-prob               The minimum probability of reaching a source
                              block for interblock speculative scheduling
  max-sched-extend-regions-iters The maximum number of iterations through CFG
                              to extend regions
  max-sched-insn-conflict-delay The maximum conflict delay for an insn to be
                              considered for speculative motion
  sched-spec-prob-cutoff      The minimal probability of speculation success
                              (in percents), so that speculative insn will be
                              scheduled.
  sched-state-edge-prob-cutoff The minimum probability an edge must have for
                              the scheduler to save its state across it.
  selsched-max-lookahead      The maximum size of the lookahead window of
                              selective scheduling
  selsched-max-sched-times    Maximum number of times that an insn could be
                              scheduled
  selsched-insns-to-rename    Maximum number of instructions in the ready list
                              that are considered eligible for renaming
  sched-mem-true-dep-cost     Minimal distance between possibly conflicting
                              store and load
  sched-autopref-queue-depth  Hardware autoprefetcher scheduler model control
                              flag.  Number of lookahead cycles the model looks
                              into; at '0' only enable instruction sorting
                              heuristic.  Disabled by default.
  max-last-value-rtl          The maximum number of RTL nodes that can be
                              recorded as combiner's last value
  max-combine-insns           The maximum number of insns combine tries to
                              combine
  integer-share-limit         The upper bound for sharing integer constants
  ssp-buffer-size             The lower bound for a buffer to be considered for
                              stack smashing protection
  min-size-for-stack-sharing  The minimum size of variables taking part in
                              stack slot sharing when not optimizing
  max-jump-thread-duplication-stmts Maximum number of statements allowed in a
                              block that needs to be duplicated when threading
                              jumps
  max-fields-for-field-sensitive Maximum number of fields in a structure before
                              pointer analysis treats the structure as a single
                              variable
  max-sched-ready-insns       The maximum number of instructions ready to be
                              issued to be considered by the scheduler during
                              the first scheduling pass
  max-dse-active-local-stores Maximum number of active local stores in RTL dead
                              store elimination
  prefetch-latency            The number of insns executed before prefetch is
                              completed
  simultaneous-prefetches     The number of prefetches that can run at the same
                              time
  l1-cache-size               The size of L1 cache
  l1-cache-line-size          The size of L1 cache line
  l2-cache-size               The size of L2 cache
  use-canonical-types         Whether to use canonical types
  max-partial-antic-length    Maximum length of partial antic set when
                              performing tree pre optimization
  sccvn-max-scc-size          Maximum size of a SCC before SCCVN stops
                              processing a function
  sccvn-max-alias-queries-per-access Maximum number of disambiguations to
                              perform per memory access
  ira-max-loops-num           Max loops number for regional RA
  ira-max-conflict-table-size Max size of conflict table in MB
  ira-loop-reserved-regs      The number of registers in each class kept unused
                              by loop invariant motion
  lra-max-considered-reload-pseudos The max number of reload pseudos which are
                              considered during spilling a non-reload pseudo
  lra-inheritance-ebb-probability-cutoff Minimal fall-through edge probability
                              in percentage used to add BB to inheritance EBB
                              in LRA
  switch-conversion-max-branch-ratio The maximum ratio between array size and
                              switch branches for a switch conversion to take
                              place
  loop-block-tile-size        size of tiles for loop blocking
  loop-unroll-jam-size        size of unrolling factor for unroll-and-jam
  loop-unroll-jam-depth       depth of unrolled loop for unroll-and-jam
  graphite-max-nb-scop-params maximum number of parameters in a SCoP
  graphite-max-bbs-per-function maximum number of basic blocks per function to
                              be analyzed by Graphite
  loop-max-datarefs-for-datadeps Maximum number of datarefs in loop for
                              building loop data dependencies
  loop-invariant-max-bbs-in-loop Max basic blocks number in loop for loop
                              invariant motion
  profile-func-internal-id    use internal function id in profile lookup
  indir-call-topn-profile     track topn target addresses in indirect-call
                              profile
  slp-max-insns-in-bb         Maximum number of instructions in basic block to
                              be considered for SLP vectorization
  min-insn-to-prefetch-ratio  Min. ratio of insns to prefetches to enable
                              prefetching for a loop with an unknown trip count
  prefetch-min-insn-to-mem-ratio Min. ratio of insns to mem ops to enable
                              prefetching in a loop
  max-vartrack-size           Max. size of var tracking hash tables
  max-vartrack-expr-depth     Max. recursion depth for expanding var tracking
                              expressions
  max-vartrack-reverse-op-size Max. size of loc list for which reverse ops
                              should be added
  min-nondebug-insn-uid       The minimum UID to be used for a nondebug insn
  ipa-sra-ptr-growth-factor   Maximum allowed growth of size of new parameters
                              ipa-sra replaces a pointer to an aggregate with
  tm-max-aggregate-size       Size in bytes after which thread-local aggregates
                              should be instrumented with the logging functions
                              instead of save/restore pairs
  sra-max-scalarization-size-Ospeed Maximum size, in storage units, of an
                              aggregate which should be considered for
                              scalarization when compiling for speed
  sra-max-scalarization-size-Osize Maximum size, in storage units, of an
                              aggregate which should be considered for
                              scalarization when compiling for size
  ipa-cp-value-list-size      Maximum size of a list of values associated with
                              each parameter for interprocedural constant
                              propagation
  ipa-cp-eval-threshold       Threshold ipa-cp opportunity evaluation that is
                              still considered beneficial to clone.
  ipa-cp-recursion-penalty    Percentage penalty the recursive functions will
                              receive when they are evaluated for cloning.
  ipa-cp-single-call-penalty  Percentage penalty functions containg a single
                              call to another function will receive when they
                              are evaluated for cloning.
  ipa-max-agg-items           Maximum number of aggregate content items for a
                              parameter in jump functions and lattices
  ipa-cp-loop-hint-bonus      Compile-time bonus IPA-CP assigns to candidates
                              which make loop bounds or strides known.
  ipa-cp-array-index-hint-bonus Compile-time bonus IPA-CP assigns to candidates
                              which make an array index known.
  ipa-max-aa-steps            Maximum number of statements that will be visited
                              by IPA formal parameter analysis based on alias
                              analysis in any given function
  lto-partitions              Number of partitions the program should be split
                              to
  lto-min-partition           Minimal size of a partition for LTO (in estimated
                              instructions)
  cxx-max-namespaces-for-diagnostic-help Maximum number of namespaces to search
                              for alternatives when name lookup fails
  max-stores-to-sink          Maximum number of conditional store pairs that
                              can be sunk
  case-values-threshold       The smallest number of different values for which
                              it is best to use a jump-table instead of a tree
                              of conditional branches, if 0, use the default
                              for the machine
  allow-store-data-races      Allow new data races on stores to be introduced
  tree-reassoc-width          Set the maximum number of instructions executed
                              in parallel in reassociated tree. If 0, use the
                              target dependent heuristic.
  max-tail-merge-comparisons  Maximum amount of similar bbs to compare a bb with
  max-tail-merge-iterations   Maximum amount of iterations of the pass over a
                              function
  max-tracked-strlens         Maximum number of strings for which strlen
                              optimization pass will track string lengths
  sched-pressure-algorithm    Which -fsched-pressure algorithm to apply
  max-slsr-cand-scan          Maximum length of candidate scans for straight-
                              line strength reduction
  asan-stack                  Enable asan stack protection
  asan-globals                Enable asan globals protection
  asan-instrument-writes      Enable asan store operations protection
  asan-instrument-reads       Enable asan load operations protection
  asan-memintrin              Enable asan builtin functions protection
  asan-use-after-return       Enable asan detection of use-after-return bugs
  asan-instrumentation-with-call-threshold Use callbacks instead of inline code
                              if number of accesses in function becomes greater
                              or equal to this number
  uninit-control-dep-attempts Maximum number of nested calls to search for
                              control dependencies during uninitialized
                              variable analysis
  chkp-max-ctor-size          Maximum number of statements to be included into
                              a single static constructor generated by Pointer
                              Bounds Checker
  max-fsm-thread-path-insns   Maximum number of instructions to copy when
                              duplicating blocks on a finite state automaton
                              jump thread path
  max-fsm-thread-length       Maximum number of basic blocks on a finite state
                              automaton jump thread path
  max-fsm-thread-paths        Maximum number of new jump thread paths to create
                              for a finite state automaton

The following options take separate arguments:
  --CLASSPATH                 This switch lacks documentation
  --assert                    This switch lacks documentation
  --bootclasspath             This switch lacks documentation
  --classpath                 This switch lacks documentation
  --define-macro              This switch lacks documentation
  --dump                      This switch lacks documentation
  --dumpbase                  This switch lacks documentation
  --dumpdir                   This switch lacks documentation
  --encoding                  This switch lacks documentation
  --extdirs                   This switch lacks documentation
  --imacros                   This switch lacks documentation
  --include                   This switch lacks documentation
  --include-directory         This switch lacks documentation
  --include-directory-after   This switch lacks documentation
  --include-prefix            This switch lacks documentation
  --include-with-prefix       This switch lacks documentation
  --include-with-prefix-after This switch lacks documentation
  --include-with-prefix-before This switch lacks documentation
  --output                    This switch lacks documentation
  --output-class-directory    This switch lacks documentation
  --output-pch=               This switch lacks documentation
  --param <param>=<value>     Set parameter <param> to value.  See below for a
                              complete list of parameters
  --resource                  This switch lacks documentation
  --undefine-macro            This switch lacks documentation
  --write-dependencies        This switch lacks documentation
  --write-user-dependencies   This switch lacks documentation
  -A<question>=<answer>       Assert the <answer> to <question>.  Putting '-'
                              before <question> disables the <answer> to
                              <question>
  -CLASSPATH                  This switch lacks documentation
  -D<macro>[=<val>]           Define a <macro> with <val> as its value.  If
                              just <macro> is given, <val> is taken to be 1
  -F <dir>                    Add <dir> to the end of the main framework
                              include path
  -G<number>                  Put global and static data smaller than <number>
                              bytes into a special section (on some targets)
  -I <dir>                    Add <dir> to the end of the main include path
  -J<directory>               Put MODULE files in 'directory'
  -L                          This switch lacks documentation
  -MD                         Generate make dependencies and compile
  -MF <file>                  Write dependency output to the given file
  -MMD                        Like -MD but ignore system header files
  -MQ <target>                Add a MAKE-quoted target
  -MT <target>                Add an unquoted target
  -U<macro>                   Undefine <macro>
  -aux-info <file>            Emit declaration information into <file>
  -auxbase                    This switch lacks documentation
  -auxbase-strip              This switch lacks documentation
  -bootclasspath              This switch lacks documentation
  -classpath                  This switch lacks documentation
  -d<letters>                 Enable dumps from specific passes of the compiler
  -dumpbase <file>            Set the file basename to be used for dumps
  -dumpdir <dir>              Set the directory name to be used for dumps
  -encoding                   This switch lacks documentation
  -faux-classpath             This switch lacks documentation
  -fintrinsic-modules-path    Specify where to find the compiled intrinsic
                              modules
  -gnatO                      Set name of output ALI file (internal switch)
  -idirafter <dir>            Add <dir> to the end of the system include path
  -imacros <file>             Accept definition of macros in <file>
  -imultiarch <dir>           Set <dir> to be the multiarch include subdirectory
  -imultilib <dir>            Set <dir> to be the multilib include subdirectory
  -include <file>             Include the contents of <file> before other files
  -iprefix <path>             Specify <path> as a prefix for next two options
  -iquote <dir>               Add <dir> to the end of the quote include path
  -isysroot <dir>             Set <dir> to be the system root directory
  -isystem <dir>              Add <dir> to the start of the system include path
  -iwithprefix <dir>          Add <dir> to the end of the system include path
  -iwithprefixbefore <dir>    Add <dir> to the end of the main include path
  -o <file>                   Place output into <file>

The following options are target specific:
  -G<number>                  Put global and static data smaller than <number>
                              bytes into a special section (on some targets)
  -mabi=ABI                   Generate code that conforms to the given ABI
  -mabicalls                  Generate code that can be used in SVR4-style
                              dynamic objects
  -mabs=MODE                  Select the IEEE 754 ABS/NEG instruction execution
                              mode
  -mandroid                   Generate code for the Android platform.
  -march=ISA                  Generate code for the given ISA
  -mbionic                    Use Bionic C library
  -mbranch-cost=COST          Set the cost of branches to roughly COST
                              instructions
  -mbranch-likely             Use Branch Likely instructions, overriding the
                              architecture default
  -mcheck-zero-division       Trap on integer divide by zero
  -mcode-readable=SETTING     Specify when instructions are allowed to access
                              code
  -mcompact-eh                Use compact exception unwinding tables.
  -mdebug                     This switch lacks documentation
  -mdebugd                    This switch lacks documentation
  -mdivide-breaks             Use branch-and-break sequences to check for
                              integer divide by zero
  -mdivide-traps              Use trap instructions to check for integer divide
                              by zero
  -mdmx                       Allow the use of MDMX instructions
  -mdouble-float              Allow hardware floating-point instructions to
                              cover both 32-bit and 64-bit operations
  -mdsp                       Use MIPS-DSP instructions
  -mdspr2                     Use MIPS-DSP REV 2 instructions
  -meb                        Use big-endian byte order
  -mel                        Use little-endian byte order
  -membedded-data             Use ROM instead of RAM
  -meva                       Use Enhanced Virtual Addressing instructions
  -mexplicit-relocs           Use NewABI-style %reloc() assembly operators
  -mextern-sdata              Use -G for data that is not defined by the
                              current object
  -mfix-24k                   Work around certain 24K errata
  -mfix-r10000                Work around certain R10000 errata
  -mfix-r4000                 Work around certain R4000 errata
  -mfix-r4400                 Work around certain R4400 errata
  -mfix-rm7000                Work around certain RM7000 errata
  -mfix-sb1                   Work around errata for early SB-1 revision 2 cores
  -mfix-vr4120                Work around certain VR4120 errata
  -mfix-vr4130                Work around VR4130 mflo/mfhi errata
  -mfix4300                   Work around an early 4300 hardware bug
  -mflip-mips16               Switch on/off MIPS16 ASE on alternating functions
                              for compiler testing
  -mflush-func=FUNC           Use FUNC to flush the cache before calling stack
                              trampolines
  -mfp-exceptions             FP exceptions are enabled
  -mfp32                      Use 32-bit floating-point registers
  -mfp64                      Use 64-bit floating-point registers
  -mfpxx                      Conform to the o32 FPXX ABI
  -mframe-header-opt          Optimize frame header
  -mfused-madd                Generate floating-point multiply-add instructions
  -mglibc                     Use GNU C library
  -mgp32                      Use 32-bit general registers
  -mgp64                      Use 64-bit general registers
  -mgpopt                     Use GP-relative addressing to access small data
  -mhard-float                Allow the use of hardware floating-point ABI and
                              instructions
  -mimadd                     Use integer madd/msub instructions
  -minterlink-compressed      Generate code that is link-compatible with MIPS16
                              and microMIPS code.
  -minterlink-mips16          An alias for minterlink-compressed provided for
                              backward-compatibility.
  -mipsN                      Generate code for ISA level N
  -mips16                     Generate MIPS16 code
  -mips16e                    Deprecated; alias for -mips16
  -mips3d                     Use MIPS-3D instructions
  -mllsc                      Use ll, sc and sync instructions
  -mlocal-sdata               Use -G for object-local data
  -mlong-calls                Use indirect calls
  -mlong32                    Use a 32-bit long type
  -mlong64                    Use a 64-bit long type
  -mlra                       Use LRA instead of reload
  -mmad                       Use PMC-style 'mad' instructions
  -mmcount-ra-address         Pass the address of the ra save location to
                              _mcount in $12
  -mmcu                       Use MCU instructions
  -mmemcpy                    Don't optimize block moves
  -mmicromips                 Use microMIPS instructions
  -mmt                        Allow the use of MT instructions
  -mnan=ENCODING              Select the IEEE 754 NaN data encoding
  -mno-flush-func             Do not use a cache-flushing function before
                              calling stack trampolines
  -mno-mdmx                   Do not use MDMX instructions
  -mno-mips16                 Generate normal-mode code
  -mno-mips3d                 Do not use MIPS-3D instructions
  -modd-spreg                 Enable use of odd-numbered single-precision
                              registers
  -mpaired-single             Use paired-single floating-point instructions
  -mplt                       When generating -mabicalls code, allow
                              executables to use PLTs and copy relocations
  -mr10k-cache-barrier=SETTING Specify when r10k cache barriers should be
                              inserted
  -mrelax-pic-calls           Try to allow the linker to turn PIC calls into
                              direct calls
  -mshared                    When generating -mabicalls code, make the code
                              suitable for use in shared libraries
  -msingle-float              Restrict the use of hardware floating-point
                              instructions to 32-bit operations
  -msmartmips                 Use SmartMIPS instructions
  -msoft-float                Prevent the use of all hardware floating-point
                              instructions
  -msplit-addresses           Optimize lui/addiu address loads
  -msym32                     Assume all symbols have 32-bit values
  -msynci                     Use synci instruction to invalidate i-cache
  -mtune=PROCESSOR            Optimize the output for PROCESSOR
  -muclibc                    Use uClibc C library
  -muninit-const-in-rodata    Put uninitialized constants in ROM (needs
                              -membedded-data)
  -mvirt                      Use Virtualization Application Specific
                              instructions
  -mvr4130-align              Perform VR4130-specific alignment optimizations
  -mxgot                      Lift restrictions on GOT size
  -mxpa                       Use eXtended Physical Address (XPA) instructions

  Known MIPS ABIs (for use with the -mabi= option):
    32 64 eabi n32 o64

  Known MIPS CPUs (for use with the -march= and -mtune= options):
    10000 1004kc 1004kf 1004kf1_1 1004kf2_1 10k 12000 12k 14000 14k 16000 16k
    2000 20kc 24kc 24kec 24kef 24kef1_1 24kef2_1 24kefx 24kex 24kf 24kf1_1
    24kf2_1 24kfx 24kx 2k 3000 34kc 34kf 34kf1_1 34kf2_1 34kfx 34kn 34kx 3900 3k
    4000 4100 4111 4120 4130 4300 4400 4600 4650 4700 4k 4kc 4kec 4kem 4kep 4km
    4kp 4ksc 4ksd 5000 5400 5500 5900 5k 5kc 5kf 6000 6k 7000 74kc 74kf 74kf1_1
    74kf2_1 74kf3_2 74kfx 74kx 7k 8000 8k 9000 9k from-abi loongson2e loongson2f
    loongson3a m14k m14kc m14ke m14kec m4k mips1 mips2 mips3 mips32 mips32r2
    mips32r3 mips32r5 mips32r6 mips4 mips64 mips64r2 mips64r3 mips64r5 mips64r6
    native octeon octeon+ octeon2 octeon3 orion p5600 r10000 r1004kc r1004kf
    r1004kf1_1 r1004kf2_1 r10k r12000 r12k r14000 r14k r16000 r16k r2000 r20kc
    r24kc r24kec r24kef r24kef1_1 r24kef2_1 r24kefx r24kex r24kf r24kf1_1
    r24kf2_1 r24kfx r24kx r2k r3000 r34kc r34kf r34kf1_1 r34kf2_1 r34kfx r34kn
    r34kx r3900 r3k r4000 r4100 r4111 r4120 r4130 r4300 r4400 r4600 r4650 r4700
    r4k r4kc r4kec r4kem r4kep r4km r4kp r4ksc r4ksd r5000 r5400 r5500 r5900 r5k
    r5kc r5kf r6000 r6k r7000 r74kc r74kf r74kf1_1 r74kf2_1 r74kf3_2 r74kfx
    r74kx r7k r8000 r8k r9000 r9k rm7000 rm7k rm9000 rm9k sb1 sb1a sr71000 sr71k
    vr4100 vr4111 vr4120 vr4130 vr4300 vr5000 vr5400 vr5500 vr5k xlp xlr

  Valid arguments to -mcode-readable=:
    no pcrel yes

  Known MIPS IEEE 754 settings (for use with the -mabs= and -mnan= options):
    2008 legacy

  Known MIPS ISA levels (for use with the -mips option):
    1 2 3 32 32r2 32r3 32r5 32r6 4 64 64r2 64r3 64r5 64r6

  Valid arguments to -mr10k-cache-barrier=:
    load-store none store

The following options are not documented:
  --preprocess                This switch lacks documentation
  -E                          This switch lacks documentation
  -MD_                        This switch lacks documentation
  -MMD_                       This switch lacks documentation
  -Wimport                    This switch lacks documentation
  -Wlarger-than-              This switch lacks documentation
  -Wpsabi                     This switch lacks documentation
  -cpp=                       This switch lacks documentation
  -fallow-leading-underscore  This switch lacks documentation
  -faux-classpath             This switch lacks documentation
  -fbuilding-libgcc           This switch lacks documentation
  -fsaw-java-file             This switch lacks documentation
  -fsource-filename=          This switch lacks documentation
  -ftemplate-depth-           This switch lacks documentation
  -fuse-linker-plugin         This switch lacks documentation
  -gant                       Catch typos
  -lang-asm                   This switch lacks documentation
  -mdebug                     This switch lacks documentation
  -mdebugd                    This switch lacks documentation
  -std=c++0x                  Deprecated in favor of -std=c++11
  -std=c++14                  Conform to the ISO 2014 C++ standard
                              (experimental and incomplete support)
  -std=c++17                  This switch lacks documentation
  -std=c++1y                  Deprecated in favor of -std=c++14
  -std=gnu++17                This switch lacks documentation
  -std=gnu++1y                This switch lacks documentation

The following options control compiler warning messages:
  --all-warnings              This switch lacks documentation
  --extra-warnings            This switch lacks documentation
  -W                          This switch is deprecated; use -Wextra instead
  -Wabi                       Warn about things that will change when compiling
                              with an ABI-compliant compiler
  -Wabi-tag                   Warn if a subobject has an abi_tag attribute that
                              the complete object type does not have
  -Wabi=                      Warn about things that change between the current
                              -fabi-version and the specified version
  -Waddress                   Warn about suspicious uses of memory addresses
  -Waggregate-return          Warn about returning structures, unions or arrays
  -Waggressive-loop-optimizations Warn if a loop with constant number of
                              iterations triggers undefined behavior
  -Waliasing                  Warn about possible aliasing of dummy arguments
  -Walign-commons             Warn about alignment of COMMON blocks
  -Wall                       Enable most warning messages
  -Wampersand                 Warn about missing ampersand in continued
                              character constants
  -Warray-bounds              Warn if an array is accessed out of bounds
  -Warray-bounds=             Warn if an array is accessed out of bounds
  -Warray-temporaries         Warn about creation of array temporaries
  -Wassign-intercept          Warn whenever an Objective-C assignment is being
                              intercepted by the garbage collector
  -Wattributes                Warn about inappropriate attribute usage
  -Wbad-function-cast         Warn about casting functions to incompatible types
  -Wbool-compare              Warn about boolean expression compared with an
                              integer value different from true/false
  -Wbuiltin-macro-redefined   Warn when a built-in preprocessor macro is
                              undefined or redefined
  -Wc++-compat                Warn about C constructs that are not in the
                              common subset of C and C++
  -Wc++0x-compat              Deprecated in favor of -Wc++11-compat
  -Wc++11-compat              Warn about C++ constructs whose meaning differs
                              between ISO C++ 1998 and ISO C++ 2011
  -Wc++14-compat              Warn about C++ constructs whose meaning differs
                              between ISO C++ 2011 and ISO C++ 2014
  -Wc-binding-type            Warn if the type of a variable might be not
                              interoperable with C
  -Wc90-c99-compat            Warn about features not present in ISO C90, but
                              present in ISO C99
  -Wc99-c11-compat            Warn about features not present in ISO C99, but
                              present in ISO C11
  -Wcast-align                Warn about pointer casts which increase alignment
  -Wcast-qual                 Warn about casts which discard qualifiers
  -Wchar-subscripts           Warn about subscripts whose type is "char"
  -Wcharacter-truncation      Warn about truncated character expressions
  -Wchkp                      Warn about memory access errors found by Pointer
                              Bounds Checker
  -Wclobbered                 Warn about variables that might be changed by
                              "longjmp" or "vfork"
  -Wcomment                   Warn about possibly nested block comments, and
                              C++ comments spanning more than one physical line
  -Wcomments                  Synonym for -Wcomment
  -Wcompare-reals             Warn about equality comparisons involving REAL or
                              COMPLEX expressions
  -Wconditionally-supported   Warn for conditionally-supported constructs
  -Wconversion                Warn for implicit type conversions that may
                              change a value
  -Wconversion-extra          Warn about most implicit conversions
  -Wconversion-null           Warn for converting NULL from/to a non-pointer
                              type
  -Wcoverage-mismatch         Warn in case profiles in -fprofile-use do not
                              match
  -Wcpp                       Warn when a #warning directive is encountered
  -Wctor-dtor-privacy         Warn when all constructors and destructors are
                              private
  -Wdate-time                 Warn about __TIME__, __DATE__ and __TIMESTAMP__
                              usage
  -Wdeclaration-after-statement Warn when a declaration is found after a
                              statement
  -Wdelete-incomplete         Warn when deleting a pointer to incomplete type
  -Wdelete-non-virtual-dtor   Warn about deleting polymorphic objects with non-
                              virtual destructors
  -Wdeprecated                Warn if a deprecated compiler feature, class,
                              method, or field is used
  -Wdeprecated-declarations   Warn about uses of __attribute__((deprecated))
                              declarations
  -Wdesignated-init           Warn about positional initialization of structs
                              requiring designated initializers
  -Wdisabled-optimization     Warn when an optimization pass is disabled
  -Wdiscarded-array-qualifiers Warn if qualifiers on arrays which are pointer
                              targets are discarded
  -Wdiscarded-qualifiers      Warn if type qualifiers on pointers are discarded
  -Wdiv-by-zero               Warn about compile-time integer division by zero
  -Wdouble-promotion          Warn about implicit conversions from "float" to
                              "double"
  -Weffc++                    Warn about violations of Effective C++ style rules
  -Wempty-body                Warn about an empty body in an if or else
                              statement
  -Wendif-labels              Warn about stray tokens after #elif and #endif
  -Wenum-compare              Warn about comparison of different enum types
  -Werror-implicit-function-declaration This switch is deprecated; use
                              -Werror=implicit-function-declaration instead
  -Wextra                     Print extra (possibly unwanted) warnings
  -Wfloat-equal               Warn if testing floating point numbers for
                              equality
  -Wformat                    Warn about printf/scanf/strftime/strfmon format
                              string anomalies
  -Wformat-contains-nul       Warn about format strings that contain NUL bytes
  -Wformat-extra-args         Warn if passing too many arguments to a function
                              for its format string
  -Wformat-nonliteral         Warn about format strings that are not literals
  -Wformat-security           Warn about possible security problems with format
                              functions
  -Wformat-signedness         Warn about sign differences with format functions
  -Wformat-y2k                Warn about strftime formats yielding 2-digit years
  -Wformat-zero-length        Warn about zero-length formats
  -Wformat=                   Warn about printf/scanf/strftime/strfmon format
                              string anomalies
  -Wfree-nonheap-object       Warn when attempting to free a non-heap object
  -Wfunction-elimination      Warn about function call elimination
  -Wignored-qualifiers        Warn whenever type qualifiers are ignored.
  -Wimplicit                  Warn about implicit declarations
  -Wimplicit-function-declaration Warn about implicit function declarations
  -Wimplicit-int              Warn when a declaration does not specify a type
  -Wimplicit-interface        Warn about calls with implicit interface
  -Wimplicit-procedure        Warn about called procedures not explicitly
                              declared
  -Wincompatible-pointer-types Warn when there is a conversion between pointers
                              that have incompatible types
  -Winherited-variadic-ctor   Warn about C++11 inheriting constructors when the
                              base has a variadic constructor
  -Winit-self                 Warn about variables which are initialized to
                              themselves
  -Winline                    Warn when an inlined function cannot be inlined
  -Wint-conversion            Warn about incompatible integer to pointer and
                              pointer to integer conversions
  -Wint-to-pointer-cast       Warn when there is a cast to a pointer from an
                              integer of a different size
  -Wintrinsic-shadow          Warn if a user-procedure has the same name as an
                              intrinsic
  -Wintrinsics-std            Warn on intrinsics not part of the selected
                              standard
  -Winvalid-memory-model      Warn when an atomic memory model parameter is
                              known to be outside the valid range.
  -Winvalid-offsetof          Warn about invalid uses of the "offsetof" macro
  -Winvalid-pch               Warn about PCH files that are found but not used
  -Wjump-misses-init          Warn when a jump misses a variable initialization
  -Wlarger-than-              This switch lacks documentation
  -Wlarger-than=<number>      Warn if an object is larger than <number> bytes
  -Wline-truncation           Warn about truncated source lines
  -Wliteral-suffix            Warn when a string or character literal is
                              followed by a ud-suffix which does not begin with
                              an underscore.
  -Wlogical-not-parentheses   Warn when logical not is used on the left hand
                              side operand of a comparison
  -Wlogical-op                Warn when a logical operator is suspiciously
                              always evaluating to true or false
  -Wlong-long                 Do not warn about using "long long" when -pedantic
  -Wmain                      Warn about suspicious declarations of "main"
  -Wmaybe-uninitialized       Warn about maybe uninitialized automatic variables
  -Wmemset-transposed-args    Warn about suspicious calls to memset where the
                              third argument is constant literal zero and the
                              second is not
  -Wmissing-braces            Warn about possibly missing braces around
                              initializers
  -Wmissing-declarations      Warn about global functions without previous
                              declarations
  -Wmissing-field-initializers Warn about missing fields in struct initializers
  -Wmissing-include-dirs      Warn about user-specified include directories
                              that do not exist
  -Wmissing-parameter-type    Warn about function parameters declared without a
                              type specifier in K&R-style functions
  -Wmissing-prototypes        Warn about global functions without prototypes
  -Wmultichar                 Warn about use of multi-character character
                              constants
  -Wmultiple-inheritance      Warn on direct multiple inheritance
  -Wnamespaces                Warn on namespace definition
  -Wnarrowing                 Warn about narrowing conversions within { } that
                              are ill-formed in C++11
  -Wnested-externs            Warn about "extern" declarations not at file scope
  -Wnoexcept                  Warn when a noexcept expression evaluates to
                              false even though the expression can't actually
                              throw
  -Wnon-template-friend       Warn when non-templatized friend functions are
                              declared within a template
  -Wnon-virtual-dtor          Warn about non-virtual destructors
  -Wnonnull                   Warn about NULL being passed to argument slots
                              marked as requiring non-NULL
  -Wnormalized=<none|id|nfc|nfkc> Warn about non-normalised Unicode strings
  -Wodr                       Warn about some C++ One Definition Rule
                              violations during link time optimization
  -Wold-style-cast            Warn if a C-style cast is used in a program
  -Wold-style-declaration     Warn for obsolescent usage in a declaration
  -Wold-style-definition      Warn if an old-style parameter definition is used
  -Wopenmp-simd               Warn if a simd directive is overridden by the
                              vectorizer cost model
  -Woverflow                  Warn about overflow in arithmetic expressions
  -Woverlength-strings        Warn if a string is longer than the maximum
                              portable length specified by the standard
  -Woverloaded-virtual        Warn about overloaded virtual function names
  -Woverride-init             Warn about overriding initializers without side
                              effects
  -Wpacked                    Warn when the packed attribute has no effect on
                              struct layout
  -Wpacked-bitfield-compat    Warn about packed bit-fields whose offset changed
                              in GCC 4.4
  -Wpadded                    Warn when padding is required to align structure
                              members
  -Wparentheses               Warn about possibly missing parentheses
  -Wpedantic                  Issue warnings needed for strict compliance to
                              the standard
  -Wpmf-conversions           Warn when converting the type of pointers to
                              member functions
  -Wpointer-arith             Warn about function pointer arithmetic
  -Wpointer-sign              Warn when a pointer differs in signedness in an
                              assignment
  -Wpointer-to-int-cast       Warn when a pointer is cast to an integer of a
                              different size
  -Wpoison-system-directories Warn for -I and -L options using system
                              directories if cross compiling
  -Wpragmas                   Warn about misuses of pragmas
  -Wproperty-assign-default   Warn if a property for an Objective-C object has
                              no assign semantics specified
  -Wprotocol                  Warn if inherited methods are unimplemented
  -Wreal-q-constant           Warn about real-literal-constants with 'q'
                              exponent-letter
  -Wrealloc-lhs               Warn when a left-hand-side array variable is
                              reallocated
  -Wrealloc-lhs-all           Warn when a left-hand-side variable is reallocated
  -Wredundant-decls           Warn about multiple declarations of the same
                              object
  -Wreorder                   Warn when the compiler reorders code
  -Wreturn-local-addr         Warn about returning a pointer/reference to a
                              local or temporary variable.
  -Wreturn-type               Warn whenever a function's return type defaults
                              to "int" (C), or about inconsistent return types
                              (C++)
  -Wselector                  Warn if a selector has multiple methods
  -Wsequence-point            Warn about possible violations of sequence point
                              rules
  -Wshadow                    Warn when one local variable shadows another
  -Wshadow-ivar               Warn if a local declaration hides an instance
                              variable
  -Wshift-count-negative      Warn if shift count is negative
  -Wshift-count-overflow      Warn if shift count >= width of type
  -Wsign-compare              Warn about signed-unsigned comparisons
  -Wsign-promo                Warn when overload promotes from unsigned to
                              signed
  -Wsized-deallocation        Warn about missing sized deallocation functions
  -Wsizeof-array-argument     Warn when sizeof is applied on a parameter
                              declared as an array
  -Wsizeof-pointer-memaccess  Warn about suspicious length parameters to
                              certain string functions if the argument uses
                              sizeof
  -Wstack-protector           Warn when not issuing stack smashing protection
                              for some reason
  -Wstack-usage=              Warn if stack usage might be larger than
                              specified amount
  -Wstrict-aliasing           Warn about code which might break strict aliasing
                              rules
  -Wstrict-aliasing=          Warn about code which might break strict aliasing
                              rules
  -Wstrict-null-sentinel      Warn about uncasted NULL used as sentinel
  -Wstrict-overflow           Warn about optimizations that assume that signed
                              overflow is undefined
  -Wstrict-overflow=          Warn about optimizations that assume that signed
                              overflow is undefined
  -Wstrict-prototypes         Warn about unprototyped function declarations
  -Wstrict-selector-match     Warn if type signatures of candidate methods do
                              not match exactly
  -Wsuggest-attribute=const   Warn about functions which might be candidates
                              for __attribute__((const))
  -Wsuggest-attribute=format  Warn about functions which might be candidates
                              for format attributes
  -Wsuggest-attribute=noreturn Warn about functions which might be candidates
                              for __attribute__((noreturn))
  -Wsuggest-attribute=pure    Warn about functions which might be candidates
                              for __attribute__((pure))
  -Wsuggest-final-methods     Warn about C++ virtual methods where adding final
                              keyword would improve code quality
  -Wsuggest-final-types       Warn about C++ polymorphic types where adding
                              final keyword would improve code quality
  -Wsuggest-override          Suggest that the override keyword be used when
                              the declaration of a virtual function overrides
                              another.
  -Wsurprising                Warn about "suspicious" constructs
  -Wswitch                    Warn about enumerated switches, with no default,
                              missing a case
  -Wswitch-bool               Warn about switches with boolean controlling
                              expression
  -Wswitch-default            Warn about enumerated switches missing a
                              "default:" statement
  -Wswitch-enum               Warn about all enumerated switches missing a
                              specific case
  -Wsync-nand                 Warn when __sync_fetch_and_nand and
                              __sync_nand_and_fetch built-in functions are used
  -Wsynth                     Deprecated.  This switch has no effect
  -Wsystem-headers            Do not suppress warnings from system headers
  -Wtabs                      Permit nonconforming uses of the tab character
  -Wtarget-lifetime           Warn if the pointer in a pointer assignment might
                              outlive its target
  -Wtemplates                 Warn on primary template declaration
  -Wtraditional               Warn about features not present in traditional C
  -Wtraditional-conversion    Warn of prototypes causing type conversions
                              different from what would happen in the absence
                              of prototype
  -Wtrampolines               Warn whenever a trampoline is generated
  -Wtrigraphs                 Warn if trigraphs are encountered that might
                              affect the meaning of the program
  -Wtype-limits               Warn if a comparison is always true or always
                              false due to the limited range of the data type
  -Wundeclared-selector       Warn about @selector()s without previously
                              declared methods
  -Wundef                     Warn if an undefined macro is used in an #if
                              directive
  -Wunderflow                 Warn about underflow of numerical constant
                              expressions
  -Wuninitialized             Warn about uninitialized automatic variables
  -Wunknown-pragmas           Warn about unrecognized pragmas
  -Wunsafe-loop-optimizations Warn if the loop cannot be optimized due to
                              nontrivial assumptions.
  -Wunsuffixed-float-constants Warn about unsuffixed float constants
  -Wunused                    Enable all -Wunused- warnings
  -Wunused-but-set-parameter  Warn when a function parameter is only set,
                              otherwise unused
  -Wunused-but-set-variable   Warn when a variable is only set, otherwise unused
  -Wunused-dummy-argument     Warn about unused dummy arguments.
  -Wunused-function           Warn when a function is unused
  -Wunused-label              Warn when a label is unused
  -Wunused-local-typedefs     Warn when typedefs locally defined in a function
                              are not used
  -Wunused-macros             Warn about macros defined in the main file that
                              are not used
  -Wunused-parameter          Warn when a function parameter is unused
  -Wunused-result             Warn if a caller of a function, marked with
                              attribute warn_unused_result, does not use its
                              return value
  -Wunused-value              Warn when an expression value is unused
  -Wunused-variable           Warn when a variable is unused
  -Wuse-without-only          Warn about USE statements that have no ONLY
                              qualifier
  -Wuseless-cast              Warn about useless casts
  -Wvarargs                   Warn about questionable usage of the macros used
                              to retrieve variable arguments
  -Wvariadic-macros           Warn about using variadic macros
  -Wvector-operation-performance Warn when a vector operation is compiled
                              outside the SIMD
  -Wvirtual-inheritance       Warn on direct virtual inheritance
  -Wvirtual-move-assign       Warn if a virtual base has a non-trivial move
                              assignment operator
  -Wvla                       Warn if a variable length array is used
  -Wvolatile-register-var     Warn when a register variable is declared volatile
  -Wwrite-strings             In C++, nonzero means warn about deprecated
                              conversion from string literals to 'char *'.  In
                              C, similar warning, except that the conversion is
                              of course not deprecated by the ISO C standard.
  -Wzero-as-null-pointer-constant Warn when a literal '0' is used as null
                              pointer
  -Wzerotrip                  Warn about zero-trip DO loops
  -frequire-return-statement  Functions which return values must end with
                              return statements

